{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/C-C++的一些有趣的区别.md","hash":"03dc6c147d9479beb157de7dcda1e656a595cc78","modified":1516176702517},{"_id":"source/_posts/Linux下如何实现C语言的system-pause.md","hash":"476227958e19b403afe730a3504e39f62e367c7b","modified":1516176702517},{"_id":"source/_posts/hello-world.md","hash":"b0f07c9b33f76f6e7a3a029fdf02e5059e514a35","modified":1516176702517},{"_id":"source/_posts/jqxx_01.png","hash":"3902e49d34ee8edf2a51db0326d1b3b6762b98ca","modified":1516176702517},{"_id":"source/_posts/jqxx_02.png","hash":"cfb0f62f298b0f0fa28e076d3622eab013c93abe","modified":1516176702517},{"_id":"source/_posts/markdown文档中mathjax的问题.md","hash":"eb64cb25ebc06846cf4cc28deff87c11d26b3cbd","modified":1516176702517},{"_id":"source/_posts/「学习笔记」机器学习-1.md","hash":"a0f0a5ef2ce813cb8f2a5b5a154463b16c7922d2","modified":1516176702518},{"_id":"source/_posts/我的第一篇博客.md","hash":"3223f22beb0f488edceb4a68e16fcccb5411eca2","modified":1516176702518},{"_id":"source/_posts/背包九讲.md","hash":"6ab4c71fe67de7fad2a0a27086076ce18b7c2a90","modified":1516176702518},{"_id":"source/_posts/重写博客.md","hash":"a617e2db57a4c860c94ac1f6efd9c586586d8a58","modified":1516176702519},{"_id":"source/categories/index.md","hash":"cf516f0421a2a30f3520b1835e2d4a0212737b40","modified":1516176702519},{"_id":"source/tags/index.md","hash":"bd0a35f770f73446e5229bf7530f6c57fa222395","modified":1516176702519},{"_id":"public/categories/index.html","hash":"c6f1dc007ca08a6f9d6424ef128aaaf782cabeaa","modified":1516177585375},{"_id":"public/tags/index.html","hash":"0cacc3c5f5091c4220800fe10cdd3c022ca53724","modified":1516177585377},{"_id":"public/2017/02/11/hello-world/index.html","hash":"82809650e7477f6d17d3828af6371210578e03da","modified":1516177585379},{"_id":"public/2016/01/29/markdown文档中mathjax的问题/index.html","hash":"1e074b4ca23c547a8b4cb3dd9c54934f44d1edb4","modified":1516177585379},{"_id":"public/2016/01/22/「学习笔记」机器学习-1/index.html","hash":"d5fae1dd5ce3e143a17bf7a68651e8516509fdda","modified":1516177585379},{"_id":"public/2016/01/22/重写博客/index.html","hash":"7e5e47cd6e10606e5bd5c98bb9c55e5389a29dff","modified":1516177585378},{"_id":"public/2015/07/21/背包九讲/index.html","hash":"dee154a4a980de97163722c4628b81b9b2a21dd4","modified":1516177585379},{"_id":"public/2015/04/15/Linux下如何实现C语言的system-pause/index.html","hash":"bc1edcb75b36e0b228aaf42c6e2d19fb9206f131","modified":1516177585379},{"_id":"public/2015/03/17/C-C++的一些有趣的区别/index.html","hash":"b694463c60823552ad4cd713084ed9f99e31df0c","modified":1516177585379},{"_id":"public/2015/03/15/我的第一篇博客/index.html","hash":"2c5c804ee532f12c81055432228057f75875ce29","modified":1516177585378},{"_id":"public/archives/index.html","hash":"40d9941d47f1ac6dd073142a3b9f6b1148c50794","modified":1516177585378},{"_id":"public/archives/2015/index.html","hash":"98d8d2eb2054a33d779b7540653d6f8126623356","modified":1516177585378},{"_id":"public/archives/2015/03/index.html","hash":"cd3d53b5fa76cd35725a059ee756cb2b0601cca3","modified":1516177585378},{"_id":"public/archives/2015/04/index.html","hash":"0d37d40450c34291e968503be05b7317bc127127","modified":1516177585378},{"_id":"public/archives/2015/07/index.html","hash":"8fb38dc13005dc7853b030817d9bb406c21de0f5","modified":1516177585378},{"_id":"public/archives/2016/index.html","hash":"f82408fb2d0cbdb32a1d77043f673bea46341071","modified":1516177585378},{"_id":"public/archives/2016/01/index.html","hash":"4607ba5b5d044eca69806002b2dc0cc0ec7323df","modified":1516177585378},{"_id":"public/archives/2017/index.html","hash":"4e73797e5be7824cbcec79cc09e546af09e9a5fd","modified":1516177585378},{"_id":"public/archives/2017/02/index.html","hash":"03cde737e85d9a03308129fab5e70c301431bf19","modified":1516177585378},{"_id":"public/categories/C-C/index.html","hash":"169227b4517b3a67923929e0bd44b4a62c1af6b7","modified":1516177585378},{"_id":"public/categories/杂项/index.html","hash":"2bf38e92d0029d90986001ce7b703be56e9b0dd3","modified":1516177585378},{"_id":"public/categories/Markdown/index.html","hash":"5adae64781bd4cfaf604d9532fad5b060ae6310b","modified":1516177585378},{"_id":"public/categories/机器学习/index.html","hash":"dca9ca4aa9f9cadeb4a3ca22b36ecc4af000cce5","modified":1516177585378},{"_id":"public/categories/算法/index.html","hash":"a32c04b20b35d25999543243ec71a7451efae25e","modified":1516177585378},{"_id":"public/index.html","hash":"73a3363fbd822c577d7c67e64c4767e540e3f5bf","modified":1516177585379},{"_id":"public/tags/C-C/index.html","hash":"5750db5dc82daafc08fec13cf6b1329135a8df6b","modified":1516177585378},{"_id":"public/tags/Linux/index.html","hash":"aba8345bb9eae099d2e565094fc5ddcd8ec4359b","modified":1516177585378},{"_id":"public/tags/Markdown/index.html","hash":"e5c60090ccba7bc0feed0f45cb8ebf920b1215f0","modified":1516177585378},{"_id":"public/tags/MathJax/index.html","hash":"426b6b6bbf0818484696cfb2bd4c68c1abe70f07","modified":1516177585378},{"_id":"public/tags/机器学习/index.html","hash":"4a6369a6df3fa461351606176511c12656e7b8a3","modified":1516177585378},{"_id":"public/tags/Python/index.html","hash":"398dd6b5524f3d0999b577747e8d2429921bf317","modified":1516177585378},{"_id":"public/tags/背包问题/index.html","hash":"15b27fd83ee90d60138f3b9f7ab2d721f9e94134","modified":1516177585379},{"_id":"public/tags/算法/index.html","hash":"d5328eaf300ea69e3b643154ea7ad17b828cd337","modified":1516177585379},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1516177573748},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1516177573748},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1516177573748},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1516177573750},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1516177573750},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1516177573751},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1516177573751},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1516177573751},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1516177573752},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1516177573752},{"_id":"themes/next/README.cn.md","hash":"5d8af3d8de8d3926126a738519e97c8442b0effe","modified":1516177573752},{"_id":"themes/next/README.md","hash":"44b28d995681a7c48bfe3d0577d6203812d07e59","modified":1516177573753},{"_id":"themes/next/_config.yml","hash":"5ff37e90e4d6812c8fc40c03fa6e1d903d743470","modified":1516177573754},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1516177573754},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1516177573754},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1516177573780},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1516177573728},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1516177573733},{"_id":"themes/next/.git/index","hash":"9fe864bc2355a840fec2102f4c52100ed6b8b633","modified":1516177573885},{"_id":"themes/next/.git/packed-refs","hash":"339779e225d913a344c5e6210617badd049c4434","modified":1516177573490},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1516177004277},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1516177573749},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1516177573749},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1516177573749},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1516177573750},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1516177573755},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1516177573755},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1516177573756},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1516177573756},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1516177573756},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1516177573757},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1516177573757},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1516177573757},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1516177573757},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1516177573758},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1516177573758},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1516177573758},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1516177573758},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1516177573758},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1516177573759},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1516177573759},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1516177573760},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1516177573778},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1516177573779},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1516177573779},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1516177573779},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1516177573779},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1516177573780},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1516177573780},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1516177573780},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1516177573781},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1516177573883},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1516177573883},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1516177573883},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573819},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1516177004278},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1516177004277},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1516177004279},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1516177004279},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1516177004279},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1516177004278},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1516177004278},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1516177004279},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1516177004279},{"_id":"themes/next/.git/logs/HEAD","hash":"c8961a55b3ccfce397403bff2050a879bf568cbb","modified":1516177573730},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1516177004278},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1516177004277},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1516177573759},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1516177573759},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1516177573760},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1516177573760},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1516177573760},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1516177573761},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1516177573761},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1516177573762},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1516177573762},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1516177573763},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1516177573763},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1516177573764},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1516177573764},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1516177573765},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1516177573765},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1516177573767},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1516177573767},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1516177573769},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1516177573775},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1516177573775},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1516177573775},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1516177573776},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1516177573776},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1516177573776},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1516177573776},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1516177573781},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1516177573782},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1516177573782},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1516177573782},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1516177573783},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1516177573783},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1516177573783},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1516177573783},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1516177573818},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1516177573820},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1516177573820},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1516177573820},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1516177573820},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1516177573821},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1516177573821},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1516177573821},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1516177573822},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1516177573822},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1516177573822},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1516177573823},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1516177573823},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516177573823},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1516177573824},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516177573824},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1516177573824},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1516177573825},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1516177573825},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1516177573782},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573768},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573768},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573803},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573803},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573805},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573817},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516177573817},{"_id":"themes/next/.git/refs/heads/master","hash":"f4d9f6f8bc79e9bc071cf29324a74a1d78158ab9","modified":1516177573730},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1516177573764},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1516177573764},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1516177573765},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1516177573765},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1516177573766},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1516177573766},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1516177573766},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1516177573766},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1516177573767},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1516177573768},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1516177573768},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1516177573769},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1516177573769},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1516177573770},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1516177573770},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1516177573770},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1516177573770},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1516177573770},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1516177573771},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1516177573771},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1516177573771},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1516177573772},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1516177573772},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1516177573772},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1516177573772},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1516177573772},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1516177573773},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1516177573773},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1516177573773},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1516177573773},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1516177573773},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1516177573774},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1516177573774},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1516177573774},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1516177573777},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1516177573778},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1516177573778},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1516177573778},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1516177573803},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1516177573803},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1516177573804},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1516177573804},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1516177573816},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1516177573817},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1516177573817},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1516177573817},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1516177573826},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1516177573826},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1516177573827},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1516177573827},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1516177573827},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1516177573828},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1516177573828},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1516177573829},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1516177573829},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1516177573830},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1516177573830},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1516177573836},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1516177573840},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1516177573840},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1516177573841},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1516177573841},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1516177573847},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1516177573847},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1516177573848},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1516177573848},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1516177573849},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1516177573850},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1516177573850},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1516177573850},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1516177573850},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1516177573864},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1516177573865},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1516177573865},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1516177573865},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1516177573866},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1516177573866},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1516177573866},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1516177573867},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1516177573867},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1516177573868},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1516177573868},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1516177573868},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1516177573869},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1516177573869},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1516177573869},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1516177573869},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1516177573870},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1516177573870},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1516177573870},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1516177573871},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1516177573871},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1516177573871},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1516177573871},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1516177573871},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1516177573872},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1516177573872},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1516177573873},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1516177573878},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1516177573879},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1516177573881},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1516177573882},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1516177573882},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1516177573864},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1516177573727},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"c8961a55b3ccfce397403bff2050a879bf568cbb","modified":1516177573731},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1516177573777},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1516177573777},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1516177573784},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1516177573785},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1516177573785},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1516177573785},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1516177573785},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1516177573788},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1516177573794},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1516177573800},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1516177573801},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1516177573801},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1516177573801},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1516177573801},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1516177573802},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1516177573802},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1516177573805},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1516177573811},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1516177573811},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1516177573811},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1516177573812},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1516177573812},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1516177573812},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1516177573812},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1516177573813},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1516177573813},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1516177573814},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1516177573814},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1516177573814},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1516177573815},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1516177573815},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1516177573815},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1516177573815},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1516177573816},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1516177573816},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1516177573829},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1516177573834},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1516177573835},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1516177573836},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1516177573842},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1516177573842},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1516177573842},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1516177573843},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1516177573843},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1516177573843},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1516177573846},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1516177573846},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1516177573847},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1516177573848},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1516177573849},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1516177573851},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1516177573851},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1516177573852},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1516177573877},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1516177573878},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1516177573835},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516177573863},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516177573863},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1516177573881},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"c8961a55b3ccfce397403bff2050a879bf568cbb","modified":1516177573727},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1516177573785},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1516177573786},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1516177573786},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1516177573786},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1516177573786},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1516177573786},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1516177573787},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1516177573787},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1516177573787},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1516177573787},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1516177573787},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1516177573788},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1516177573788},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1516177573788},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1516177573788},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1516177573789},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1516177573789},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1516177573789},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1516177573789},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1516177573789},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1516177573790},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1516177573790},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1516177573790},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1516177573790},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1516177573790},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1516177573790},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1516177573791},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1516177573791},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1516177573791},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1516177573792},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1516177573792},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1516177573792},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1516177573793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1516177573793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1516177573793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1516177573793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1516177573794},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1516177573794},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1516177573794},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1516177573797},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1516177573797},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1516177573797},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1516177573798},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1516177573798},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1516177573798},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1516177573798},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1516177573799},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1516177573799},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1516177573799},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1516177573795},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1516177573795},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1516177573795},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1516177573795},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1516177573796},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1516177573796},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1516177573796},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1516177573796},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1516177573797},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1516177573812},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1516177573813},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1516177573814},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1516177573832},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1516177573832},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1516177573833},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1516177573833},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1516177573834},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1516177573844},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1516177573844},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1516177573844},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1516177573845},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1516177573845},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1516177573845},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516177573856},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1516177573854},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1516177573862},{"_id":"themes/next/.git/objects/pack/pack-43ca19f05a7eafaedc751ec6ae895cd343f93cae.idx","hash":"c637758f1196f2aeae22bf87c40dee268b82109e","modified":1516177573474},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1516177573839},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1516177573876},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1516177573860},{"_id":"themes/next/.git/objects/pack/pack-43ca19f05a7eafaedc751ec6ae895cd343f93cae.pack","hash":"886bc64f4f16bf15797490c12a53f33b839e38f5","modified":1516177573470},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1516177585432},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1516177585432},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1516177585432},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1516177585432},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1516177585432},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1516177585432},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1516177585432},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1516177585432},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1516177585432},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516177585432},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516177585432},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1516177585432},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1516177585433},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1516177585433},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1516177585433},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1516177585433},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1516177585433},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1516177585433},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1516177585433},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1516177585433},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1516177585433},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1516177585433},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1516177585433},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1516177585433},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1516177585433},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1516177585433},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1516177585433},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1516177585433},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1516177585433},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1516177585433},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1516177585433},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1516177585433},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1516177585433},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516177586328},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516177586359},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1516177586383},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1516177586383},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1516177586383},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1516177586384},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1516177586384},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1516177586384},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1516177586384},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1516177586384},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1516177586385},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1516177586385},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1516177586385},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1516177586385},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1516177586385},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1516177586385},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1516177586385},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1516177586385},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1516177586385},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1516177586385},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1516177586385},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1516177586385},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1516177586385},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1516177586385},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1516177586385},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1516177586385},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1516177586385},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1516177586385},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1516177586385},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1516177586385},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1516177586385},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1516177586385},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1516177586385},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1516177586385},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1516177586385},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1516177586385},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1516177586385},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1516177586385},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1516177586386},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1516177586386},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1516177586386},{"_id":"public/css/main.css","hash":"28b4d1e1d9466dabbc2e35c304e6ef1310f8b951","modified":1516177586386},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1516177586386},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1516177586387},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1516177586387},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1516177586387},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1516177586387},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1516177586387},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1516177586387},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1516177586387},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1516177586387},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1516177586387},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1516177586388},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1516177586388},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1516177586388},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1516177586388},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1516177586388},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1516177586389},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1516177586389},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1516177586389},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1516177586389},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1516177586389},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516177586390},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1516177586390},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1516177586390},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1516177586416}],"Category":[{"name":"C/C++","_id":"cjcishbuc0002nuyegg6vb345"},{"name":"杂项","_id":"cjcishbuq000anuyebmg1fkxd"},{"name":"Markdown","_id":"cjcishbus000dnuye4346r2gi"},{"name":"机器学习","_id":"cjcishbvb000qnuyeq7p04u5v"},{"name":"算法","_id":"cjcishbvi000vnuyeyvix6l8l"}],"Data":[],"Page":[{"title":"分类","type":"categories","date":"2017-02-11T15:19:43.000Z","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ntype: \"categories\"\ndate: 2017-02-11 23:19:43\ncomments: false\n---\n","updated":"2018-01-17T08:11:42.519Z","path":"categories/index.html","layout":"page","_id":"cjcishbv2000nnuye15fyctet","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-02-11T15:01:02.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-02-11 23:01:02\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-17T08:11:42.519Z","path":"tags/index.html","layout":"page","_id":"cjcishbva000pnuyenndwwcp8","content":"","excerpt":"","more":""}],"Post":[{"title":"C/C++的一些有趣的区别","date":"2015-03-17T14:55:06.000Z","_content":"在[geeksforgeeks](http://www.geeksforgeeks.org)上看到一篇文章，说的是一些在C中可以编译但在C++中不行的程序，觉得比较好玩，就翻译分享一下啦。\n\n***\n\n- 在C++中，在main()中使用其它自定义的函数时必须在前面写上声明或者定义，但是在C中却可以写在main()的后面\n\n```\n#include<stdio.h>\nint main()\n{\n   foo(); // foo() is called before its declaration/definition\n   return 0;\n} \n \nint foo()\n{\n   printf(\"Hello\");\n   return 0; \n}\n\n```\n上面的程序在C中可以编译成功，但是在C++中就不行\n\n***\n\n- 在C++中，指针是不能指向一个常量的，但是在C中可以\n\n```\n#include <stdio.h>\n \nint main(void)\n{\n    int const j = 20;\n \n    /* The below assignment is invalid in C++, results in error\n       In C, the compiler may throw a warning, but casting is\n       implicitly allowed */\n    \n    int *ptr = &j;  // A normal pointer points to const\n \n    printf(\"*ptr: %d\\n\", *ptr);\n \n    return 0;\n}\n```\n\n***\n\n- 在C语言中，一个空指针可以直接指派给其他指针，如int*，char *。但在C中，必须指定类型\n\n```\n#include <stdio.h>\nint main()\n{\n   void *vptr;\n   int *iptr = vptr; //In C++, it must be replaced with int *iptr=(int *)vptr; \n   return 0;\n}\n```\n\n***\n\n- 下面的程序在C中可以编译，但是在C++中不行，必须为常量初始化\n\n```\n#include <stdio.h>\nint main()\n{\n    const int a;   // LINE 4\n    return 0;\n}\n```\n> Line 4 [Error] uninitialized const 'a' [-fpermissive]\n\n***\n\n- 在C中可以用C++的一些特定的关键字作为变量名\n\n*p.s. 这是自然，汗*\n\n```\n#include <stdio.h>\nint main(void)\n{\n    int new = 5;  // new is a keyword in C++, but not in C\n    printf(\"%d\", new);\n}\n```\n\n***\n\n- C++的检查会比C更严格，如：\n\n```\n#include <stdio.h>\nint main()\n{\n    char *c = 333;\n    printf(\"c = %u\", c);\n    return 0;\n}\n```\n\n> error “invalid conversion from ‘int’ to ‘char*'”.\n\n***\n\n**试了一些，确实是这样，感觉蛮有趣的！**\n\n[原文链接](http://www.geeksforgeeks.org/write-c-program-wont-compiler-c/)\n","source":"_posts/C-C++的一些有趣的区别.md","raw":"title: \"C/C++的一些有趣的区别\"\ndate: 2015-03-17 22:55:06\ncategories: \"C/C++\"\ntags:\n  - C/C++\n---\n在[geeksforgeeks](http://www.geeksforgeeks.org)上看到一篇文章，说的是一些在C中可以编译但在C++中不行的程序，觉得比较好玩，就翻译分享一下啦。\n\n***\n\n- 在C++中，在main()中使用其它自定义的函数时必须在前面写上声明或者定义，但是在C中却可以写在main()的后面\n\n```\n#include<stdio.h>\nint main()\n{\n   foo(); // foo() is called before its declaration/definition\n   return 0;\n} \n \nint foo()\n{\n   printf(\"Hello\");\n   return 0; \n}\n\n```\n上面的程序在C中可以编译成功，但是在C++中就不行\n\n***\n\n- 在C++中，指针是不能指向一个常量的，但是在C中可以\n\n```\n#include <stdio.h>\n \nint main(void)\n{\n    int const j = 20;\n \n    /* The below assignment is invalid in C++, results in error\n       In C, the compiler may throw a warning, but casting is\n       implicitly allowed */\n    \n    int *ptr = &j;  // A normal pointer points to const\n \n    printf(\"*ptr: %d\\n\", *ptr);\n \n    return 0;\n}\n```\n\n***\n\n- 在C语言中，一个空指针可以直接指派给其他指针，如int*，char *。但在C中，必须指定类型\n\n```\n#include <stdio.h>\nint main()\n{\n   void *vptr;\n   int *iptr = vptr; //In C++, it must be replaced with int *iptr=(int *)vptr; \n   return 0;\n}\n```\n\n***\n\n- 下面的程序在C中可以编译，但是在C++中不行，必须为常量初始化\n\n```\n#include <stdio.h>\nint main()\n{\n    const int a;   // LINE 4\n    return 0;\n}\n```\n> Line 4 [Error] uninitialized const 'a' [-fpermissive]\n\n***\n\n- 在C中可以用C++的一些特定的关键字作为变量名\n\n*p.s. 这是自然，汗*\n\n```\n#include <stdio.h>\nint main(void)\n{\n    int new = 5;  // new is a keyword in C++, but not in C\n    printf(\"%d\", new);\n}\n```\n\n***\n\n- C++的检查会比C更严格，如：\n\n```\n#include <stdio.h>\nint main()\n{\n    char *c = 333;\n    printf(\"c = %u\", c);\n    return 0;\n}\n```\n\n> error “invalid conversion from ‘int’ to ‘char*'”.\n\n***\n\n**试了一些，确实是这样，感觉蛮有趣的！**\n\n[原文链接](http://www.geeksforgeeks.org/write-c-program-wont-compiler-c/)\n","slug":"C-C++的一些有趣的区别","published":1,"updated":"2018-01-17T08:11:42.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbu30000nuyeqg7m4f05","content":"<p>在<a href=\"http://www.geeksforgeeks.org\" target=\"_blank\" rel=\"external\">geeksforgeeks</a>上看到一篇文章，说的是一些在C中可以编译但在C++中不行的程序，觉得比较好玩，就翻译分享一下啦。</p>\n<hr>\n<ul>\n<li>在C++中，在main()中使用其它自定义的函数时必须在前面写上声明或者定义，但是在C中却可以写在main()的后面</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">   foo(); <span class=\"comment\">// foo() is called before its declaration/definition</span></div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125; </div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">foo</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello\"</span>);</div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的程序在C中可以编译成功，但是在C++中就不行</p>\n<hr>\n<ul>\n<li>在C++中，指针是不能指向一个常量的，但是在C中可以</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> <span class=\"keyword\">const</span> j = <span class=\"number\">20</span>;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/* The below assignment is invalid in C++, results in error</span></div><div class=\"line\">       In C, the compiler may throw a warning, but casting is</div><div class=\"line\">       implicitly allowed */</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">int</span> *ptr = &amp;j;  <span class=\"comment\">// A normal pointer points to const</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"*ptr: %d\\n\"</span>, *ptr);</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>在C语言中，一个空指针可以直接指派给其他指针，如int<em>，char </em>。但在C中，必须指定类型</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"keyword\">void</span> *vptr;</div><div class=\"line\">   <span class=\"keyword\">int</span> *iptr = vptr; <span class=\"comment\">//In C++, it must be replaced with int *iptr=(int *)vptr; </span></div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>下面的程序在C中可以编译，但是在C++中不行，必须为常量初始化</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> a;   <span class=\"comment\">// LINE 4</span></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Line 4 [Error] uninitialized const ‘a’ [-fpermissive]</p>\n</blockquote>\n<hr>\n<ul>\n<li>在C中可以用C++的一些特定的关键字作为变量名</li>\n</ul>\n<p><em>p.s. 这是自然，汗</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> <span class=\"keyword\">new</span> = <span class=\"number\">5</span>;  <span class=\"comment\">// new is a keyword in C++, but not in C</span></div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, <span class=\"keyword\">new</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>C++的检查会比C更严格，如：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">char</span> *c = <span class=\"number\">333</span>;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"c = %u\"</span>, c);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>error “invalid conversion from ‘int’ to ‘char*’”.</p>\n</blockquote>\n<hr>\n<p><strong>试了一些，确实是这样，感觉蛮有趣的！</strong></p>\n<p><a href=\"http://www.geeksforgeeks.org/write-c-program-wont-compiler-c/\" target=\"_blank\" rel=\"external\">原文链接</a></p>\n","excerpt":"","more":"<p>在<a href=\"http://www.geeksforgeeks.org\">geeksforgeeks</a>上看到一篇文章，说的是一些在C中可以编译但在C++中不行的程序，觉得比较好玩，就翻译分享一下啦。</p>\n<hr>\n<ul>\n<li>在C++中，在main()中使用其它自定义的函数时必须在前面写上声明或者定义，但是在C中却可以写在main()的后面</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">   foo(); <span class=\"comment\">// foo() is called before its declaration/definition</span></div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125; </div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">foo</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello\"</span>);</div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的程序在C中可以编译成功，但是在C++中就不行</p>\n<hr>\n<ul>\n<li>在C++中，指针是不能指向一个常量的，但是在C中可以</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> <span class=\"keyword\">const</span> j = <span class=\"number\">20</span>;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/* The below assignment is invalid in C++, results in error</div><div class=\"line\">       In C, the compiler may throw a warning, but casting is</div><div class=\"line\">       implicitly allowed */</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">int</span> *ptr = &amp;j;  <span class=\"comment\">// A normal pointer points to const</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"*ptr: %d\\n\"</span>, *ptr);</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>在C语言中，一个空指针可以直接指派给其他指针，如int<em>，char </em>。但在C中，必须指定类型</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">   <span class=\"keyword\">void</span> *vptr;</div><div class=\"line\">   <span class=\"keyword\">int</span> *iptr = vptr; <span class=\"comment\">//In C++, it must be replaced with int *iptr=(int *)vptr; </span></div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>下面的程序在C中可以编译，但是在C++中不行，必须为常量初始化</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> a;   <span class=\"comment\">// LINE 4</span></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Line 4 [Error] uninitialized const ‘a’ [-fpermissive]</p>\n</blockquote>\n<hr>\n<ul>\n<li>在C中可以用C++的一些特定的关键字作为变量名</li>\n</ul>\n<p><em>p.s. 这是自然，汗</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> <span class=\"keyword\">new</span> = <span class=\"number\">5</span>;  <span class=\"comment\">// new is a keyword in C++, but not in C</span></div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, <span class=\"keyword\">new</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>C++的检查会比C更严格，如：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">char</span> *c = <span class=\"number\">333</span>;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"c = %u\"</span>, c);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>error “invalid conversion from ‘int’ to ‘char*’”.</p>\n</blockquote>\n<hr>\n<p><strong>试了一些，确实是这样，感觉蛮有趣的！</strong></p>\n<p><a href=\"http://www.geeksforgeeks.org/write-c-program-wont-compiler-c/\">原文链接</a></p>\n"},{"title":"Linux下如何实现C语言的system(\"pause\")","date":"2015-04-15T01:23:57.000Z","_content":"\n- **getch()** ?\n\t+ 不是标准库中的函数，在Linux中一般情况无法使用\n\n- **getchar() + printf(\"\\b\")** ?\n\t+ 貌似使用getchar()读入，再输出一个退格符将原来回显的字符删除应该是可以的，但是在实际试了一下发现根本不行。。。\n\n\t+ **原因**：终端驱动器确实会读一个字符，但是他的输入只有到'\\n' 或 EOF 才会结束，所以如果不输入回车就不会实际执行getchar().\t当然，如果上一次输入的字符并没有全部读完是可以getchar()把没有读完的字符读掉。\n\n-  ***解决办法***\n```c\nvoid system_pause(void)\n{\n\tgetchar();\n \tputs(\"Press any key to continue...\");\n \tsystem(\"stty raw\");\n \tgetchar();\n\tsystem(\"stty cooked\");\n\tprintf(\"\\b\");\n}\n```\n这段代码也是我在网上找到的，我的理解是：\n+ getchar()读掉上面多余的'\\n'，按程序的实际情况添加\n+ 输出\"Press any key to continue...\"\n+ system(\"stty raw\");：将终端驱动器改为一次一个字符的模式，即输入一个字符就结束输入\n+ getchar(); 读一个字符\n+ system(\"stty cooked\"); 将终端驱动器改回一次一行的模式\n+ printf('\\b'); 退格，将回显的字符删除\n\n***\np.s. 以上仅仅是个人理解，欢迎大家指出其中的错误","source":"_posts/Linux下如何实现C语言的system-pause.md","raw":"title: \"Linux下如何实现C语言的system(\\\"pause\\\")\"\ndate: 2015-04-15 09:23:57\ncategories: \"C/C++\"\ntags:\n  - Linux\n  - C/C++\n---\n\n- **getch()** ?\n\t+ 不是标准库中的函数，在Linux中一般情况无法使用\n\n- **getchar() + printf(\"\\b\")** ?\n\t+ 貌似使用getchar()读入，再输出一个退格符将原来回显的字符删除应该是可以的，但是在实际试了一下发现根本不行。。。\n\n\t+ **原因**：终端驱动器确实会读一个字符，但是他的输入只有到'\\n' 或 EOF 才会结束，所以如果不输入回车就不会实际执行getchar().\t当然，如果上一次输入的字符并没有全部读完是可以getchar()把没有读完的字符读掉。\n\n-  ***解决办法***\n```c\nvoid system_pause(void)\n{\n\tgetchar();\n \tputs(\"Press any key to continue...\");\n \tsystem(\"stty raw\");\n \tgetchar();\n\tsystem(\"stty cooked\");\n\tprintf(\"\\b\");\n}\n```\n这段代码也是我在网上找到的，我的理解是：\n+ getchar()读掉上面多余的'\\n'，按程序的实际情况添加\n+ 输出\"Press any key to continue...\"\n+ system(\"stty raw\");：将终端驱动器改为一次一个字符的模式，即输入一个字符就结束输入\n+ getchar(); 读一个字符\n+ system(\"stty cooked\"); 将终端驱动器改回一次一行的模式\n+ printf('\\b'); 退格，将回显的字符删除\n\n***\np.s. 以上仅仅是个人理解，欢迎大家指出其中的错误","slug":"Linux下如何实现C语言的system-pause","published":1,"updated":"2018-01-17T08:11:42.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbua0001nuyeoyqxapat","content":"<ul>\n<li><p><strong>getch()</strong> ?</p>\n<ul>\n<li>不是标准库中的函数，在Linux中一般情况无法使用</li>\n</ul>\n</li>\n<li><p><strong>getchar() + printf(“\\b”)</strong> ?</p>\n<ul>\n<li><p>貌似使用getchar()读入，再输出一个退格符将原来回显的字符删除应该是可以的，但是在实际试了一下发现根本不行。。。</p>\n</li>\n<li><p><strong>原因</strong>：终端驱动器确实会读一个字符，但是他的输入只有到’\\n’ 或 EOF 才会结束，所以如果不输入回车就不会实际执行getchar().    当然，如果上一次输入的字符并没有全部读完是可以getchar()把没有读完的字符读掉。</p>\n</li>\n</ul>\n</li>\n<li><p><strong><em>解决办法</em></strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">system_pause</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\tgetchar();</div><div class=\"line\"> \t<span class=\"built_in\">puts</span>(<span class=\"string\">\"Press any key to continue...\"</span>);</div><div class=\"line\"> \tsystem(<span class=\"string\">\"stty raw\"</span>);</div><div class=\"line\"> \tgetchar();</div><div class=\"line\">\tsystem(<span class=\"string\">\"stty cooked\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\b\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这段代码也是我在网上找到的，我的理解是：</p>\n<ul>\n<li>getchar()读掉上面多余的’\\n’，按程序的实际情况添加</li>\n<li>输出”Press any key to continue…”</li>\n<li>system(“stty raw”);：将终端驱动器改为一次一个字符的模式，即输入一个字符就结束输入</li>\n<li>getchar(); 读一个字符</li>\n<li>system(“stty cooked”); 将终端驱动器改回一次一行的模式</li>\n<li>printf(‘\\b’); 退格，将回显的字符删除</li>\n</ul>\n<hr>\n<p>p.s. 以上仅仅是个人理解，欢迎大家指出其中的错误</p>\n","excerpt":"","more":"<ul>\n<li><p><strong>getch()</strong> ?</p>\n<ul>\n<li>不是标准库中的函数，在Linux中一般情况无法使用</li>\n</ul>\n</li>\n<li><p><strong>getchar() + printf(“\\b”)</strong> ?</p>\n<ul>\n<li><p>貌似使用getchar()读入，再输出一个退格符将原来回显的字符删除应该是可以的，但是在实际试了一下发现根本不行。。。</p>\n</li>\n<li><p><strong>原因</strong>：终端驱动器确实会读一个字符，但是他的输入只有到’\\n’ 或 EOF 才会结束，所以如果不输入回车就不会实际执行getchar().    当然，如果上一次输入的字符并没有全部读完是可以getchar()把没有读完的字符读掉。</p>\n</li>\n</ul>\n</li>\n<li><p><strong><em>解决办法</em></strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">system_pause</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\tgetchar();</div><div class=\"line\"> \t<span class=\"built_in\">puts</span>(<span class=\"string\">\"Press any key to continue...\"</span>);</div><div class=\"line\"> \tsystem(<span class=\"string\">\"stty raw\"</span>);</div><div class=\"line\"> \tgetchar();</div><div class=\"line\">\tsystem(<span class=\"string\">\"stty cooked\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\b\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这段代码也是我在网上找到的，我的理解是：</p>\n<ul>\n<li>getchar()读掉上面多余的’\\n’，按程序的实际情况添加</li>\n<li>输出”Press any key to continue…”</li>\n<li>system(“stty raw”);：将终端驱动器改为一次一个字符的模式，即输入一个字符就结束输入</li>\n<li>getchar(); 读一个字符</li>\n<li>system(“stty cooked”); 将终端驱动器改回一次一行的模式</li>\n<li>printf(‘\\b’); 退格，将回显的字符删除</li>\n</ul>\n<hr>\n<p>p.s. 以上仅仅是个人理解，欢迎大家指出其中的错误</p>\n"},{"title":"Hello World","date":"2017-02-11T10:55:06.000Z","_content":"\n### 写在前面\n由于重装系统的缘故，Github也是很久都没有使用过了（并不是因为我懒得写代码  /手动滑稽）。\n\n由于今天突然想使用Github和用Hexo写博客了，因此花了些时间把东西弄起来了（很坑的东西是我以前配置Hexo时参考的博客居然404了，因此又重新找了好久，我在考虑着是不是应该自己写一个教程，方便以后参考）\n\n我之前是有个**spectop1017**的Github账号的，这是因为我当时学习使用Github时不太会，也不知道怎么的申请了两个账号，也不知道怎么的使用了**spectop1017**这个账号去提交代码了。那个账号里面也没有什么东西了，基本上都是当时学习Android时一些练手的程序，在**spectop1017.github.io**上面写的一些博客我也搬到**spectop.github.io**这里了，那个账号就不打算再使用了。另外我在一大堆文件中居然找到了当时因为重装系统而丢失的第一批Blog的Markdown文件，真是意外之喜，就一起搬运过来了。\n\n*分割线：以下是Hexo自带的Hello world文档*\n\n<hr>\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-02-11 18:55:06\ncategories: \"杂项\"\ntags:\n---\n\n### 写在前面\n由于重装系统的缘故，Github也是很久都没有使用过了（并不是因为我懒得写代码  /手动滑稽）。\n\n由于今天突然想使用Github和用Hexo写博客了，因此花了些时间把东西弄起来了（很坑的东西是我以前配置Hexo时参考的博客居然404了，因此又重新找了好久，我在考虑着是不是应该自己写一个教程，方便以后参考）\n\n我之前是有个**spectop1017**的Github账号的，这是因为我当时学习使用Github时不太会，也不知道怎么的申请了两个账号，也不知道怎么的使用了**spectop1017**这个账号去提交代码了。那个账号里面也没有什么东西了，基本上都是当时学习Android时一些练手的程序，在**spectop1017.github.io**上面写的一些博客我也搬到**spectop.github.io**这里了，那个账号就不打算再使用了。另外我在一大堆文件中居然找到了当时因为重装系统而丢失的第一批Blog的Markdown文件，真是意外之喜，就一起搬运过来了。\n\n*分割线：以下是Hexo自带的Hello world文档*\n\n<hr>\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-01-17T08:11:42.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbuh0004nuye658kp7dy","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>由于重装系统的缘故，Github也是很久都没有使用过了（并不是因为我懒得写代码  /手动滑稽）。</p>\n<p>由于今天突然想使用Github和用Hexo写博客了，因此花了些时间把东西弄起来了（很坑的东西是我以前配置Hexo时参考的博客居然404了，因此又重新找了好久，我在考虑着是不是应该自己写一个教程，方便以后参考）</p>\n<p>我之前是有个<strong>spectop1017</strong>的Github账号的，这是因为我当时学习使用Github时不太会，也不知道怎么的申请了两个账号，也不知道怎么的使用了<strong>spectop1017</strong>这个账号去提交代码了。那个账号里面也没有什么东西了，基本上都是当时学习Android时一些练手的程序，在<strong>spectop1017.github.io</strong>上面写的一些博客我也搬到<strong>spectop.github.io</strong>这里了，那个账号就不打算再使用了。另外我在一大堆文件中居然找到了当时因为重装系统而丢失的第一批Blog的Markdown文件，真是意外之喜，就一起搬运过来了。</p>\n<p><em>分割线：以下是Hexo自带的Hello world文档</em></p>\n<hr>\n\n<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>由于重装系统的缘故，Github也是很久都没有使用过了（并不是因为我懒得写代码  /手动滑稽）。</p>\n<p>由于今天突然想使用Github和用Hexo写博客了，因此花了些时间把东西弄起来了（很坑的东西是我以前配置Hexo时参考的博客居然404了，因此又重新找了好久，我在考虑着是不是应该自己写一个教程，方便以后参考）</p>\n<p>我之前是有个<strong>spectop1017</strong>的Github账号的，这是因为我当时学习使用Github时不太会，也不知道怎么的申请了两个账号，也不知道怎么的使用了<strong>spectop1017</strong>这个账号去提交代码了。那个账号里面也没有什么东西了，基本上都是当时学习Android时一些练手的程序，在<strong>spectop1017.github.io</strong>上面写的一些博客我也搬到<strong>spectop.github.io</strong>这里了，那个账号就不打算再使用了。另外我在一大堆文件中居然找到了当时因为重装系统而丢失的第一批Blog的Markdown文件，真是意外之喜，就一起搬运过来了。</p>\n<p><em>分割线：以下是Hexo自带的Hello world文档</em></p>\n<hr>\n\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"markdown文档中mathjax的问题","date":"2016-01-28T16:03:10.000Z","_content":"\n在写markdown文档时经常会需要插入数学公式，我之前只会使用图片插入，上次在看到mathjax后，我开始了使用mathjax的历程，但在实际写文档的过程中遇到了一些问题。\n\n<!--more-->\n\n# 关于有一些公式无法正确的显示\n\n在写机器学习的文章中遇到的一个关于范数的公式写出来编辑器上显示没有问题，但是一旦放进文档里就不行了，这个问题困扰了我很长时间。\n\n这是代码：\n```\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k} $$\n```\n\n这是效果：\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k} $$\n\n这里haroopad显示的公式是正确的，但是hexo编译过后的网页显示就不对了。\n\n把代码剪裁一下，看看什么样子的公式是可以的：\n```\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$\n```\n\n效果：\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$\n\n这个好像就可以，但是貌似sum后面的i一旦加上花括号就不行：\n```\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i} \\right) $$\n```\n\n效果：\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i} \\right) $$\n\n于是我点开了两个网页的源代码，定位到这一行：\n```html\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim<em>{k\\to\\infty}\\left( \\sum</em>{i} \\right) $$</p>\n```\n\n```html\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$</p>\n```\n\n可以发现最明显的不同就算lim后面的 ``<em>``，这时我们注意到，hexo在编译的时候将lim和sum后面的下划线 \\_翻译成强调的 ``<em>`` 了，仔细观察前面的公式，确实可以发现一部分变成了斜体。所以我们要在所有的下划线 \\_ 前面加上 \\\\ 转义就可以了。\n\n**OK，搞定**\n\n*** p.s 我的chrome上显示的公式后面都有一个竖线，firefox没有，内啥，一般平时用chrome习惯，所以有人知道怎么弄咩？ ***\n\n*** 上面的问题在重新配置Hexo之后就没有了，个人觉得应该是版本的问题？ ***","source":"_posts/markdown文档中mathjax的问题.md","raw":"title: markdown文档中mathjax的问题\ndate: 2016-01-29 00:03:10\ncategories: \"Markdown\"\ntags:\n  - Markdown\n  - MathJax\n---\n\n在写markdown文档时经常会需要插入数学公式，我之前只会使用图片插入，上次在看到mathjax后，我开始了使用mathjax的历程，但在实际写文档的过程中遇到了一些问题。\n\n<!--more-->\n\n# 关于有一些公式无法正确的显示\n\n在写机器学习的文章中遇到的一个关于范数的公式写出来编辑器上显示没有问题，但是一旦放进文档里就不行了，这个问题困扰了我很长时间。\n\n这是代码：\n```\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k} $$\n```\n\n这是效果：\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k} $$\n\n这里haroopad显示的公式是正确的，但是hexo编译过后的网页显示就不对了。\n\n把代码剪裁一下，看看什么样子的公式是可以的：\n```\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$\n```\n\n效果：\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$\n\n这个好像就可以，但是貌似sum后面的i一旦加上花括号就不行：\n```\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i} \\right) $$\n```\n\n效果：\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义\n > $$ \\lim_{k\\to\\infty}\\left( \\sum_{i} \\right) $$\n\n于是我点开了两个网页的源代码，定位到这一行：\n```html\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim<em>{k\\to\\infty}\\left( \\sum</em>{i} \\right) $$</p>\n```\n\n```html\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$</p>\n```\n\n可以发现最明显的不同就算lim后面的 ``<em>``，这时我们注意到，hexo在编译的时候将lim和sum后面的下划线 \\_翻译成强调的 ``<em>`` 了，仔细观察前面的公式，确实可以发现一部分变成了斜体。所以我们要在所有的下划线 \\_ 前面加上 \\\\ 转义就可以了。\n\n**OK，搞定**\n\n*** p.s 我的chrome上显示的公式后面都有一个竖线，firefox没有，内啥，一般平时用chrome习惯，所以有人知道怎么弄咩？ ***\n\n*** 上面的问题在重新配置Hexo之后就没有了，个人觉得应该是版本的问题？ ***","slug":"markdown文档中mathjax的问题","published":1,"updated":"2018-01-17T08:11:42.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbuk0005nuyeyt3yol5k","content":"<p>在写markdown文档时经常会需要插入数学公式，我之前只会使用图片插入，上次在看到mathjax后，我开始了使用mathjax的历程，但在实际写文档的过程中遇到了一些问题。</p>\n<a id=\"more\"></a>\n<h1 id=\"关于有一些公式无法正确的显示\"><a href=\"#关于有一些公式无法正确的显示\" class=\"headerlink\" title=\"关于有一些公式无法正确的显示\"></a>关于有一些公式无法正确的显示</h1><p>在写机器学习的文章中遇到的一个关于范数的公式写出来编辑器上显示没有问题，但是一旦放进文档里就不行了，这个问题困扰了我很长时间。</p>\n<p>这是代码：<br><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义</div><div class=\"line\">&gt; <span class=\"formula\">$$ <span class=\"tag\">\\<span class=\"name\">lim</span></span>_&#123;k<span class=\"tag\">\\<span class=\"name\">to</span></span><span class=\"tag\">\\<span class=\"name\">infty</span></span>&#125;<span class=\"tag\">\\<span class=\"name\">left</span></span>( <span class=\"tag\">\\<span class=\"name\">sum</span></span>_&#123;i=1&#125;^n<span class=\"tag\">\\<span class=\"name\">mid</span></span> p_i-q_i<span class=\"tag\">\\<span class=\"name\">mid</span></span> ^k<span class=\"tag\">\\<span class=\"name\">right</span></span>)^<span class=\"tag\">\\<span class=\"name\">frac</span><span class=\"string\">&#123;1&#125;</span><span class=\"string\">&#123;k&#125;</span></span> $$</span></div></pre></td></tr></table></figure></p>\n<p>这是效果：</p>\n<blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim<em>{k\\to\\infty}\\left( \\sum</em>{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k} $$</p>\n</blockquote>\n<p>这里haroopad显示的公式是正确的，但是hexo编译过后的网页显示就不对了。</p>\n<p>把代码剪裁一下，看看什么样子的公式是可以的：<br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义</div><div class=\"line\">&gt; $$ <span class=\"symbol\">\\l</span>im_&#123;k<span class=\"symbol\">\\t</span>o<span class=\"symbol\">\\i</span>nfty&#125;<span class=\"symbol\">\\l</span>eft( <span class=\"symbol\">\\s</span>um_i <span class=\"symbol\">\\r</span>ight) $$</div></pre></td></tr></table></figure></p>\n<p>效果：</p>\n<blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$</p>\n</blockquote>\n<p>这个好像就可以，但是貌似sum后面的i一旦加上花括号就不行：<br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义</div><div class=\"line\">&gt; $$ <span class=\"symbol\">\\l</span>im_&#123;k<span class=\"symbol\">\\t</span>o<span class=\"symbol\">\\i</span>nfty&#125;<span class=\"symbol\">\\l</span>eft( <span class=\"symbol\">\\s</span>um_&#123;i&#125; <span class=\"symbol\">\\r</span>ight) $$</div></pre></td></tr></table></figure></p>\n<p>效果：</p>\n<blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim<em>{k\\to\\infty}\\left( \\sum</em>{i} \\right) $$</p>\n</blockquote>\n<p>于是我点开了两个网页的源代码，定位到这一行：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>$$ \\lim<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>&#123;k\\to\\infty&#125;\\left( \\sum<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>&#123;i&#125; \\right) $$<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>$$ \\lim_&#123;k\\to\\infty&#125;\\left( \\sum_i \\right) $$<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>可以发现最明显的不同就算lim后面的 <code>&lt;em&gt;</code>，这时我们注意到，hexo在编译的时候将lim和sum后面的下划线 _翻译成强调的 <code>&lt;em&gt;</code> 了，仔细观察前面的公式，确实可以发现一部分变成了斜体。所以我们要在所有的下划线 _ 前面加上 \\ 转义就可以了。</p>\n<p><strong>OK，搞定</strong></p>\n<p><strong><em> p.s 我的chrome上显示的公式后面都有一个竖线，firefox没有，内啥，一般平时用chrome习惯，所以有人知道怎么弄咩？ </em></strong></p>\n<p><strong><em> 上面的问题在重新配置Hexo之后就没有了，个人觉得应该是版本的问题？ </em></strong></p>\n","excerpt":"<p>在写markdown文档时经常会需要插入数学公式，我之前只会使用图片插入，上次在看到mathjax后，我开始了使用mathjax的历程，但在实际写文档的过程中遇到了一些问题。</p>","more":"<h1 id=\"关于有一些公式无法正确的显示\"><a href=\"#关于有一些公式无法正确的显示\" class=\"headerlink\" title=\"关于有一些公式无法正确的显示\"></a>关于有一些公式无法正确的显示</h1><p>在写机器学习的文章中遇到的一个关于范数的公式写出来编辑器上显示没有问题，但是一旦放进文档里就不行了，这个问题困扰了我很长时间。</p>\n<p>这是代码：<br><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义</div><div class=\"line\">&gt; <span class=\"formula\">$$ <span class=\"tag\">\\<span class=\"name\">lim</span></span>_&#123;k<span class=\"tag\">\\<span class=\"name\">to</span></span><span class=\"tag\">\\<span class=\"name\">infty</span></span>&#125;<span class=\"tag\">\\<span class=\"name\">left</span></span>( <span class=\"tag\">\\<span class=\"name\">sum</span></span>_&#123;i=1&#125;^n<span class=\"tag\">\\<span class=\"name\">mid</span></span> p_i-q_i<span class=\"tag\">\\<span class=\"name\">mid</span></span> ^k<span class=\"tag\">\\<span class=\"name\">right</span></span>)^<span class=\"tag\">\\<span class=\"name\">frac</span><span class=\"string\">&#123;1&#125;</span><span class=\"string\">&#123;k&#125;</span></span> $$</span></div></pre></td></tr></table></figure></p>\n<p>这是效果：</p>\n<blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim<em>{k\\to\\infty}\\left( \\sum</em>{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k} $$</p>\n</blockquote>\n<p>这里haroopad显示的公式是正确的，但是hexo编译过后的网页显示就不对了。</p>\n<p>把代码剪裁一下，看看什么样子的公式是可以的：<br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义</div><div class=\"line\">&gt; $$ <span class=\"symbol\">\\l</span>im_&#123;k<span class=\"symbol\">\\t</span>o<span class=\"symbol\">\\i</span>nfty&#125;<span class=\"symbol\">\\l</span>eft( <span class=\"symbol\">\\s</span>um_i <span class=\"symbol\">\\r</span>ight) $$</div></pre></td></tr></table></figure></p>\n<p>效果：</p>\n<blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim_{k\\to\\infty}\\left( \\sum_i \\right) $$</p>\n</blockquote>\n<p>这个好像就可以，但是貌似sum后面的i一旦加上花括号就不行：<br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义</div><div class=\"line\">&gt; $$ <span class=\"symbol\">\\l</span>im_&#123;k<span class=\"symbol\">\\t</span>o<span class=\"symbol\">\\i</span>nfty&#125;<span class=\"symbol\">\\l</span>eft( <span class=\"symbol\">\\s</span>um_&#123;i&#125; <span class=\"symbol\">\\r</span>ight) $$</div></pre></td></tr></table></figure></p>\n<p>效果：</p>\n<blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<br>$$ \\lim<em>{k\\to\\infty}\\left( \\sum</em>{i} \\right) $$</p>\n</blockquote>\n<p>于是我点开了两个网页的源代码，定位到这一行：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>$$ \\lim<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>&#123;k\\to\\infty&#125;\\left( \\sum<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>&#123;i&#125; \\right) $$<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>$$ \\lim_&#123;k\\to\\infty&#125;\\left( \\sum_i \\right) $$<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>可以发现最明显的不同就算lim后面的 <code>&lt;em&gt;</code>，这时我们注意到，hexo在编译的时候将lim和sum后面的下划线 _翻译成强调的 <code>&lt;em&gt;</code> 了，仔细观察前面的公式，确实可以发现一部分变成了斜体。所以我们要在所有的下划线 _ 前面加上 \\ 转义就可以了。</p>\n<p><strong>OK，搞定</strong></p>\n<p><strong><em> p.s 我的chrome上显示的公式后面都有一个竖线，firefox没有，内啥，一般平时用chrome习惯，所以有人知道怎么弄咩？ </em></strong></p>\n<p><strong><em> 上面的问题在重新配置Hexo之后就没有了，个人觉得应该是版本的问题？ </em></strong></p>"},{"title":"「学习笔记」机器学习(1)","date":"2016-01-22T06:32:57.000Z","_content":"# 科学算法库的安装(linux)\n\n+ 1.安装Numpy\n        sudo apt-get install python-numpy\n+ 2.安装Scipy\n        sudo apt-get install python-numpy\n+ 3.Matplotlib\n        sudo apt-get install tk-dev\n        sudo apt-get install python-gtk2-dev\n        sudo apt-get install python-pyside\n+ 4.spyder GUI环境\n        sudo apt-get install spyder\n\n<br>\n\n+ **上述安装完毕后，可以利用**\n\n    ```python\n    #! /usr/bin/python\n    import numpy as np\n    import matplotlib.pyplot as plt\n\n    x = np.linspace(0,4*3.1415,100)\n    y = np.sin(x)\n\n    plt.figure(figsize=(8,4))\n    plt.plot(x,y,label=\"$sin(x)$\",color=\"red\",linewidth=2)\n    plt.legend()\n    plt.show()\n    ```\n\n  **进行测试。若生成正弦曲线窗口，则配置完成. **\n  \n# NumPy的基本操作\n\n+ ## Numpy 的导入\n\n\t\timport numpy as np\n    \n    这种写法在使用相关函数的时候需要写明是哪个包的，如:\n\n\t\tmyZero = np.zeros([3,5])\n    \n    还可以导入包全局使用\n\n\t\tfrom numpy import *\n    \n\n+ ## NumPy 的基本操作\n\n     1. 创建全0矩阵和全1矩阵\n     ```python\n      myZero = zeros([n,m])\n      myOne = ones([n,m])```\n\n     2. 生成随机矩阵\n     ```python\n     myRand = random.rand(n,m)   # n 行 m 列的 0～1 之间的随机数矩阵\n     ```\n\n     3. 生成单位矩阵\n     ```python\n     myEye = eye(n)   # n * n 的单位阵\n     ```\n\n     4. 将一个数组转化为一个矩阵\n     ```python\n     myMatrix = mat([[1,2,3],[4,5,6],[7,8,9]])\n     ```\n\n     5. 矩阵所有元素求和\n     ```python\n     S = sum(myMatrix)\n     ```\n\n     6. 矩阵各元素的乘积\n     ```python\n     matrix = multiply(matrix1, matrix2) # matrix1 和 matrix2 对应元素相乘的矩阵\n     ```\n\n     7. 求矩阵的 n 次幂\n     ```python\n     matrix = power(myMatrix, n) #生成一个矩阵，矩阵内部的元素是原矩阵对应元素的n次幂\n     ```\n\n     8. 矩阵的转置\n     ```python\n     print matrix.T   #打印转置后的矩阵，不改变原矩阵\n     matrix.transpose()   #同上\n     ```\n\n     9. 矩阵的其他操作\n     ```python\n     [m, n] = shape(matrix) # m, n为矩阵的行列数\n     myscl1 = matrix[0] # 矩阵的切片操作，取第一行\n     myscl2 = matrix.T[0] # 矩阵的切片操作，取第一列\n     mycpmat = matrix.copy() # 矩阵的复制\n     print matrix1 < matrix2 # 矩阵的比较，会逐一比较对应的每一个元素，并输出一个仅包含True, False 的相同大小的矩阵\n     dot(m1,m2)  #计算m1,m2的点积\n     norm(v)  #计算向量V的范数\n     ```\n+ ## Linalg线性代数库\n\n     1. 矩阵的行列式\n     ```python\n     print linalg.det(matrix)\n     ```\n     2. 矩阵的逆\n     ```python\n     print linalg.inv(matrix)\n     ```\n     3. 矩阵的对称\n     ```python\n     print matrix * matrix.T\n     ```\n     4. 矩阵的秩\n     ```python\n     print linalg.matrix_rank(A)\n     ```\n     5. 可逆矩阵求解\n     ```python\n     print linalg.solve(A,b.T) # 如果b已经是一列的就不用转置了\n     ```\n\n+ ## 各类距离的python实现\n\t **各类距离会在后面说明**\n\t 1. Euclidean Distance\n\t ```python\n     vector1 = mat([1,2,3])\n     vector2 = mat([4,5,6])\n     print sqrt((vector1-vector2)*(vector1-vector2).T)\n     ```\n\t 2. Manhattan Distance\n\t ```python\n     vector1 = mat([1,2,3])\n     vector2 = mat([4,5,6])\n     print sum(abs(vector1-vector2))\n     ```\n\t 3. Chebyshev Distance\n\t ```python\n     vector1 = mat([1,2,3])\n     vector2 = mat([4,5,6])\n     print abs(vector1-vector2).max()\n     ```\n\t 4. Cosine\n\t ```python\n     cosV12 = dot(vector1,vector2)/(linalg.norm(vector1)*linalg.norm(vector2))\n     print cosV12\n     ```\n\t 5. Hamming Distance\n\t ```python\n     matV = mat([[1,1,0,1,0,1,0,0,1], [0,1,1,0,0,0,1,1,1]])\n     smstr = nonzero(matV[0] - matV[1]);\n     print shape(smstr[0])[1]\n     ```\n\t 6. Jaccard Distance\n\t ```python\n     import scipy.spatial.distance as dist\n     matV = mat([[1,1,0,1,0,1,0,0,1], [0,1,1,0,0,0,1,1,1]])\n     print dist.pdist(matV, 'jaccard')\n     ```\n\n     \n# 机器学习的数学基础\n\n + **范数**\n > 向量的范数可以简单、形象的理解为**向量的长度**，或者向量到坐标系原点的距离，或者**相应空间内的两点之间的距离**\n >  \n > ***向量的范数定义*** : 向量的范数是一个函数 $ \\parallel x\\parallel $ ,满足非负性 $ \\parallel x\\parallel > 0 $ , 齐次性 $ \\parallel cx\\parallel = \\mid c\\mid\\parallel x\\parallel $ ,三角不等式 $ \\parallel x+y\\parallel \\leq\\parallel x\\parallel +\\parallel y\\parallel $ 。\n > \n > L1范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值之和。\n > L2范数：  $\\parallel x\\parallel $为 $ x $向量各个元素平方和的开方，又称 Euclidean 范数或者 Frobenius 范数。\n > Lp范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值 $ p $次方和的  $ 1\\over p $ 次方\n > L $\\infty $范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值最大的那个元素，如下：$$ \\lim\\_{k\\to\\infty}\\left( \\sum\\_{i=1}^n\\mid p\\_i-q\\_i\\mid ^k\\right)^\\frac{1}{k}\n $$\n + **Minkowski Distance (闵可夫斯基距离)**\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义。\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 间的Minkowski距离定义为：\n > $$ d\\_{12}=\\sqrt[p]{\\sum\\_{k=1}^n(x\\_{1k}-x\\_{2k})^p} $$\n > 其中p是一个变参数。\n > - 当 p=1 时，就是 Manhattan Distance (曼哈顿距离)\n > - 当 p=2 时，就是 Euclidean Distance (欧氏距离)\n > - 当 $ p\\to\\infty $ 时，就是 Chebyshev Distance (切比雪夫距离)\n + **Euclideam Distance**\n > 欧氏距离（L2范数）是最易于理解的一种距离计算方法，源于欧氏空间的两点距离公式\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的欧氏距离：\n > $$ d\\_{12}=\\sqrt{\\sum\\_{k=1}^n(x\\_{1k}-x\\_{2k})^2} $$\n > 表示为向量运算的形式：\n > $$ d\\_{12}=\\sqrt{(A - B)(A - B)^T} $$\n + **Manhattan Distance**\n > 曼哈顿距离（L1范数）可以理解为计算网格中两点路径的距离\n > 二维平面两点 $ A(x\\_1,y\\_1) $ 和 $ B(x\\_2,y\\_2) $ 间的曼哈顿距离:\n > $$ d\\_{12}=\\mid x\\_1-x\\_2\\mid +\\mid y\\_1-y\\_2\\mid $$\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的曼哈顿距离：\n > $$ d\\_{12}=\\sum\\_{k=1}^n\\mid x\\_{1k}-x\\_{2k}\\mid $$\n + **Chebyshev Distance**\n > 切比雪夫距离类似与棋盘上国王从一点到另一点移动的最少次数，即 $ max(\\mid x\\_1-x\\_2\\mid,\\mid y\\_1-y\\_2\\mid) $\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的切比雪夫距离：\n > $$ d\\_{12}=max\\_i(\\mid x\\_{1i}-x\\_{2i}\\mid) $$\n > 该公式的另一个等价公式：\n > $$ d\\_{12}=\\lim\\_{k\\to\\infty}\\left(\\sum\\_{i=1}^n\\mid x\\_{1i}-x\\_{2i}\\mid^k\\right)^\\frac{1}{k} $$\n + **Cosine**\n > 夹角余弦可以用来两个向量方向的差异，机器学习中借用这一概念来衡量样本之间的差异\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的夹角余弦：\n > $$ \\cos\\theta=\\frac{AB}{\\mid A\\mid\\mid B\\mid} $$\n > 即：\n > $$ \\cos\\theta=\\frac{\\sum\\_{k=1}^nx\\_{1k}x\\_{2k}}{\\sqrt{\\sum\\_{k=1}^nx\\_{1k}^2}\\sqrt{\\sum\\_{k=1}^nx\\_{2k}^2}} $$\n + **Hamming Distance**\n > 汉明距离的定义：两个等长字符串s1,s2,将其中一个变成另一个需要的最小替换次数。\n > 应用：信息编码（为了增强容错性，应使得编码间的最小汉明距离尽可能大）\n + **Jaccard Similarity Coefficient(杰卡德相似系数)**\n > 杰卡德相似系数：两个集合A,B的交集元素在并集元素中所占的比例，用符号 $ J(A,B) $ 表示\n > $$ J(A,B)=\\frac{\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$\n > 杰卡德距：与杰卡德相似系数相反的概念：\n > $$ J\\_\\delta(A,B)=1-J(A,B)=\\frac{\\mid A\\cup B\\mid-\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$\n + **特征间的相关性**\n > 1. 相关系数与相关距离\n > \t相关系数：\n > \t$$ \\rho\\_{XY}=\\frac{Cov(X,Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}=\\frac{E((X-EX)(Y-EY))}{\\sqrt{D(X)}\\sqrt{D(Y)}} $$\n > \t相关距离：\n > \t$$ D\\_{XY}=1-\\rho\\_{XY} $$\n  \tpython实现：\n  \t```python\n  \tfeaturemat = mat(...)  # 初始化矩阵\n  \t# 计算均值\n  \tmv1 = mean(featuremat[0])  # 计算第一列的均值\n  \tmv2 = mean(featuremat[1])  # 计算第二列的均值\n  \t#计算两列的标准差\n  \tdv1 = std(featuremat[0]) \n  \tdv2 = std(featuremat[1])\n  \tcorref = mean(multiply(featuremat[0]-mv1,featuremat[1]-mv2))/(dv1*dv2)\n  \tprint corref  #输出相关系数\n  \tprint corrcoef(featuremat)  #输出相关系数矩阵\n  \t```\n > 2. 马氏距离","source":"_posts/「学习笔记」机器学习-1.md","raw":"title: 「学习笔记」机器学习(1)\ndate: 2016-01-22 14:32:57\ncategories: \"机器学习\"\ntags:\n  - 机器学习\n  - Python\n---\n# 科学算法库的安装(linux)\n\n+ 1.安装Numpy\n        sudo apt-get install python-numpy\n+ 2.安装Scipy\n        sudo apt-get install python-numpy\n+ 3.Matplotlib\n        sudo apt-get install tk-dev\n        sudo apt-get install python-gtk2-dev\n        sudo apt-get install python-pyside\n+ 4.spyder GUI环境\n        sudo apt-get install spyder\n\n<br>\n\n+ **上述安装完毕后，可以利用**\n\n    ```python\n    #! /usr/bin/python\n    import numpy as np\n    import matplotlib.pyplot as plt\n\n    x = np.linspace(0,4*3.1415,100)\n    y = np.sin(x)\n\n    plt.figure(figsize=(8,4))\n    plt.plot(x,y,label=\"$sin(x)$\",color=\"red\",linewidth=2)\n    plt.legend()\n    plt.show()\n    ```\n\n  **进行测试。若生成正弦曲线窗口，则配置完成. **\n  \n# NumPy的基本操作\n\n+ ## Numpy 的导入\n\n\t\timport numpy as np\n    \n    这种写法在使用相关函数的时候需要写明是哪个包的，如:\n\n\t\tmyZero = np.zeros([3,5])\n    \n    还可以导入包全局使用\n\n\t\tfrom numpy import *\n    \n\n+ ## NumPy 的基本操作\n\n     1. 创建全0矩阵和全1矩阵\n     ```python\n      myZero = zeros([n,m])\n      myOne = ones([n,m])```\n\n     2. 生成随机矩阵\n     ```python\n     myRand = random.rand(n,m)   # n 行 m 列的 0～1 之间的随机数矩阵\n     ```\n\n     3. 生成单位矩阵\n     ```python\n     myEye = eye(n)   # n * n 的单位阵\n     ```\n\n     4. 将一个数组转化为一个矩阵\n     ```python\n     myMatrix = mat([[1,2,3],[4,5,6],[7,8,9]])\n     ```\n\n     5. 矩阵所有元素求和\n     ```python\n     S = sum(myMatrix)\n     ```\n\n     6. 矩阵各元素的乘积\n     ```python\n     matrix = multiply(matrix1, matrix2) # matrix1 和 matrix2 对应元素相乘的矩阵\n     ```\n\n     7. 求矩阵的 n 次幂\n     ```python\n     matrix = power(myMatrix, n) #生成一个矩阵，矩阵内部的元素是原矩阵对应元素的n次幂\n     ```\n\n     8. 矩阵的转置\n     ```python\n     print matrix.T   #打印转置后的矩阵，不改变原矩阵\n     matrix.transpose()   #同上\n     ```\n\n     9. 矩阵的其他操作\n     ```python\n     [m, n] = shape(matrix) # m, n为矩阵的行列数\n     myscl1 = matrix[0] # 矩阵的切片操作，取第一行\n     myscl2 = matrix.T[0] # 矩阵的切片操作，取第一列\n     mycpmat = matrix.copy() # 矩阵的复制\n     print matrix1 < matrix2 # 矩阵的比较，会逐一比较对应的每一个元素，并输出一个仅包含True, False 的相同大小的矩阵\n     dot(m1,m2)  #计算m1,m2的点积\n     norm(v)  #计算向量V的范数\n     ```\n+ ## Linalg线性代数库\n\n     1. 矩阵的行列式\n     ```python\n     print linalg.det(matrix)\n     ```\n     2. 矩阵的逆\n     ```python\n     print linalg.inv(matrix)\n     ```\n     3. 矩阵的对称\n     ```python\n     print matrix * matrix.T\n     ```\n     4. 矩阵的秩\n     ```python\n     print linalg.matrix_rank(A)\n     ```\n     5. 可逆矩阵求解\n     ```python\n     print linalg.solve(A,b.T) # 如果b已经是一列的就不用转置了\n     ```\n\n+ ## 各类距离的python实现\n\t **各类距离会在后面说明**\n\t 1. Euclidean Distance\n\t ```python\n     vector1 = mat([1,2,3])\n     vector2 = mat([4,5,6])\n     print sqrt((vector1-vector2)*(vector1-vector2).T)\n     ```\n\t 2. Manhattan Distance\n\t ```python\n     vector1 = mat([1,2,3])\n     vector2 = mat([4,5,6])\n     print sum(abs(vector1-vector2))\n     ```\n\t 3. Chebyshev Distance\n\t ```python\n     vector1 = mat([1,2,3])\n     vector2 = mat([4,5,6])\n     print abs(vector1-vector2).max()\n     ```\n\t 4. Cosine\n\t ```python\n     cosV12 = dot(vector1,vector2)/(linalg.norm(vector1)*linalg.norm(vector2))\n     print cosV12\n     ```\n\t 5. Hamming Distance\n\t ```python\n     matV = mat([[1,1,0,1,0,1,0,0,1], [0,1,1,0,0,0,1,1,1]])\n     smstr = nonzero(matV[0] - matV[1]);\n     print shape(smstr[0])[1]\n     ```\n\t 6. Jaccard Distance\n\t ```python\n     import scipy.spatial.distance as dist\n     matV = mat([[1,1,0,1,0,1,0,0,1], [0,1,1,0,0,0,1,1,1]])\n     print dist.pdist(matV, 'jaccard')\n     ```\n\n     \n# 机器学习的数学基础\n\n + **范数**\n > 向量的范数可以简单、形象的理解为**向量的长度**，或者向量到坐标系原点的距离，或者**相应空间内的两点之间的距离**\n >  \n > ***向量的范数定义*** : 向量的范数是一个函数 $ \\parallel x\\parallel $ ,满足非负性 $ \\parallel x\\parallel > 0 $ , 齐次性 $ \\parallel cx\\parallel = \\mid c\\mid\\parallel x\\parallel $ ,三角不等式 $ \\parallel x+y\\parallel \\leq\\parallel x\\parallel +\\parallel y\\parallel $ 。\n > \n > L1范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值之和。\n > L2范数：  $\\parallel x\\parallel $为 $ x $向量各个元素平方和的开方，又称 Euclidean 范数或者 Frobenius 范数。\n > Lp范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值 $ p $次方和的  $ 1\\over p $ 次方\n > L $\\infty $范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值最大的那个元素，如下：$$ \\lim\\_{k\\to\\infty}\\left( \\sum\\_{i=1}^n\\mid p\\_i-q\\_i\\mid ^k\\right)^\\frac{1}{k}\n $$\n + **Minkowski Distance (闵可夫斯基距离)**\n > 严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义。\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 间的Minkowski距离定义为：\n > $$ d\\_{12}=\\sqrt[p]{\\sum\\_{k=1}^n(x\\_{1k}-x\\_{2k})^p} $$\n > 其中p是一个变参数。\n > - 当 p=1 时，就是 Manhattan Distance (曼哈顿距离)\n > - 当 p=2 时，就是 Euclidean Distance (欧氏距离)\n > - 当 $ p\\to\\infty $ 时，就是 Chebyshev Distance (切比雪夫距离)\n + **Euclideam Distance**\n > 欧氏距离（L2范数）是最易于理解的一种距离计算方法，源于欧氏空间的两点距离公式\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的欧氏距离：\n > $$ d\\_{12}=\\sqrt{\\sum\\_{k=1}^n(x\\_{1k}-x\\_{2k})^2} $$\n > 表示为向量运算的形式：\n > $$ d\\_{12}=\\sqrt{(A - B)(A - B)^T} $$\n + **Manhattan Distance**\n > 曼哈顿距离（L1范数）可以理解为计算网格中两点路径的距离\n > 二维平面两点 $ A(x\\_1,y\\_1) $ 和 $ B(x\\_2,y\\_2) $ 间的曼哈顿距离:\n > $$ d\\_{12}=\\mid x\\_1-x\\_2\\mid +\\mid y\\_1-y\\_2\\mid $$\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的曼哈顿距离：\n > $$ d\\_{12}=\\sum\\_{k=1}^n\\mid x\\_{1k}-x\\_{2k}\\mid $$\n + **Chebyshev Distance**\n > 切比雪夫距离类似与棋盘上国王从一点到另一点移动的最少次数，即 $ max(\\mid x\\_1-x\\_2\\mid,\\mid y\\_1-y\\_2\\mid) $\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的切比雪夫距离：\n > $$ d\\_{12}=max\\_i(\\mid x\\_{1i}-x\\_{2i}\\mid) $$\n > 该公式的另一个等价公式：\n > $$ d\\_{12}=\\lim\\_{k\\to\\infty}\\left(\\sum\\_{i=1}^n\\mid x\\_{1i}-x\\_{2i}\\mid^k\\right)^\\frac{1}{k} $$\n + **Cosine**\n > 夹角余弦可以用来两个向量方向的差异，机器学习中借用这一概念来衡量样本之间的差异\n > 两个n维向量 $ A(x\\_{11},x\\_{12},\\cdots,x\\_{1n}) $ 与 $ B(x\\_{21},x\\_{22},\\cdots,x\\_{2n}) $ 之间的夹角余弦：\n > $$ \\cos\\theta=\\frac{AB}{\\mid A\\mid\\mid B\\mid} $$\n > 即：\n > $$ \\cos\\theta=\\frac{\\sum\\_{k=1}^nx\\_{1k}x\\_{2k}}{\\sqrt{\\sum\\_{k=1}^nx\\_{1k}^2}\\sqrt{\\sum\\_{k=1}^nx\\_{2k}^2}} $$\n + **Hamming Distance**\n > 汉明距离的定义：两个等长字符串s1,s2,将其中一个变成另一个需要的最小替换次数。\n > 应用：信息编码（为了增强容错性，应使得编码间的最小汉明距离尽可能大）\n + **Jaccard Similarity Coefficient(杰卡德相似系数)**\n > 杰卡德相似系数：两个集合A,B的交集元素在并集元素中所占的比例，用符号 $ J(A,B) $ 表示\n > $$ J(A,B)=\\frac{\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$\n > 杰卡德距：与杰卡德相似系数相反的概念：\n > $$ J\\_\\delta(A,B)=1-J(A,B)=\\frac{\\mid A\\cup B\\mid-\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$\n + **特征间的相关性**\n > 1. 相关系数与相关距离\n > \t相关系数：\n > \t$$ \\rho\\_{XY}=\\frac{Cov(X,Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}=\\frac{E((X-EX)(Y-EY))}{\\sqrt{D(X)}\\sqrt{D(Y)}} $$\n > \t相关距离：\n > \t$$ D\\_{XY}=1-\\rho\\_{XY} $$\n  \tpython实现：\n  \t```python\n  \tfeaturemat = mat(...)  # 初始化矩阵\n  \t# 计算均值\n  \tmv1 = mean(featuremat[0])  # 计算第一列的均值\n  \tmv2 = mean(featuremat[1])  # 计算第二列的均值\n  \t#计算两列的标准差\n  \tdv1 = std(featuremat[0]) \n  \tdv2 = std(featuremat[1])\n  \tcorref = mean(multiply(featuremat[0]-mv1,featuremat[1]-mv2))/(dv1*dv2)\n  \tprint corref  #输出相关系数\n  \tprint corrcoef(featuremat)  #输出相关系数矩阵\n  \t```\n > 2. 马氏距离","slug":"「学习笔记」机器学习-1","published":1,"updated":"2018-01-17T08:11:42.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbv1000mnuye4wm1wou6","content":"<h1 id=\"科学算法库的安装-linux\"><a href=\"#科学算法库的安装-linux\" class=\"headerlink\" title=\"科学算法库的安装(linux)\"></a>科学算法库的安装(linux)</h1><ul>\n<li>1.安装Numpy<pre><code>sudo apt-get install python-numpy\n</code></pre></li>\n<li>2.安装Scipy<pre><code>sudo apt-get install python-numpy\n</code></pre></li>\n<li>3.Matplotlib<pre><code>sudo apt-get install tk-dev\nsudo apt-get install python-gtk2-dev\nsudo apt-get install python-pyside\n</code></pre></li>\n<li>4.spyder GUI环境<pre><code>sudo apt-get install spyder\n</code></pre></li>\n</ul>\n<p><br></p>\n<ul>\n<li><p><strong>上述安装完毕后，可以利用</strong></p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></div><div class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</div><div class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</div><div class=\"line\"></div><div class=\"line\">x = np.linspace(<span class=\"number\">0</span>,<span class=\"number\">4</span>*<span class=\"number\">3.1415</span>,<span class=\"number\">100</span>)</div><div class=\"line\">y = np.sin(x)</div><div class=\"line\"></div><div class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>,<span class=\"number\">4</span>))</div><div class=\"line\">plt.plot(x,y,label=<span class=\"string\">\"$sin(x)$\"</span>,color=<span class=\"string\">\"red\"</span>,linewidth=<span class=\"number\">2</span>)</div><div class=\"line\">plt.legend()</div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n<p><strong>进行测试。若生成正弦曲线窗口，则配置完成. </strong></p>\n</li>\n</ul>\n<h1 id=\"NumPy的基本操作\"><a href=\"#NumPy的基本操作\" class=\"headerlink\" title=\"NumPy的基本操作\"></a>NumPy的基本操作</h1><ul>\n<li><h2 id=\"Numpy-的导入\"><a href=\"#Numpy-的导入\" class=\"headerlink\" title=\"Numpy 的导入\"></a>Numpy 的导入</h2><pre><code>import numpy as np\n</code></pre><p>  这种写法在使用相关函数的时候需要写明是哪个包的，如:</p>\n<pre><code>myZero = np.zeros([3,5])\n</code></pre><p>  还可以导入包全局使用</p>\n<pre><code>from numpy import *\n</code></pre></li>\n</ul>\n<ul>\n<li><h2 id=\"NumPy-的基本操作\"><a href=\"#NumPy-的基本操作\" class=\"headerlink\" title=\"NumPy 的基本操作\"></a>NumPy 的基本操作</h2><ol>\n<li><p>创建全0矩阵和全1矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">myZero = zeros([n,m])</div><div class=\"line\">myOne = ones([n,m])</div></pre></td></tr></table></figure>\n</li>\n<li><p>生成随机矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">myRand = random.rand(n,m)   <span class=\"comment\"># n 行 m 列的 0～1 之间的随机数矩阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>生成单位矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">myEye = eye(n)   <span class=\"comment\"># n * n 的单位阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>将一个数组转化为一个矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">myMatrix = mat([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]])</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵所有元素求和</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = sum(myMatrix)</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵各元素的乘积</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">matrix = multiply(matrix1, matrix2) <span class=\"comment\"># matrix1 和 matrix2 对应元素相乘的矩阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>求矩阵的 n 次幂</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">matrix = power(myMatrix, n) <span class=\"comment\">#生成一个矩阵，矩阵内部的元素是原矩阵对应元素的n次幂</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的转置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> matrix.T   <span class=\"comment\">#打印转置后的矩阵，不改变原矩阵</span></div><div class=\"line\">matrix.transpose()   <span class=\"comment\">#同上</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的其他操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[m, n] = shape(matrix) <span class=\"comment\"># m, n为矩阵的行列数</span></div><div class=\"line\">myscl1 = matrix[<span class=\"number\">0</span>] <span class=\"comment\"># 矩阵的切片操作，取第一行</span></div><div class=\"line\">myscl2 = matrix.T[<span class=\"number\">0</span>] <span class=\"comment\"># 矩阵的切片操作，取第一列</span></div><div class=\"line\">mycpmat = matrix.copy() <span class=\"comment\"># 矩阵的复制</span></div><div class=\"line\"><span class=\"keyword\">print</span> matrix1 &lt; matrix2 <span class=\"comment\"># 矩阵的比较，会逐一比较对应的每一个元素，并输出一个仅包含True, False 的相同大小的矩阵</span></div><div class=\"line\">dot(m1,m2)  <span class=\"comment\">#计算m1,m2的点积</span></div><div class=\"line\">norm(v)  <span class=\"comment\">#计算向量V的范数</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><h2 id=\"Linalg线性代数库\"><a href=\"#Linalg线性代数库\" class=\"headerlink\" title=\"Linalg线性代数库\"></a>Linalg线性代数库</h2><ol>\n<li><p>矩阵的行列式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.det(matrix)</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的逆</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.inv(matrix)</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的对称</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> matrix * matrix.T</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的秩</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.matrix_rank(A)</div></pre></td></tr></table></figure>\n</li>\n<li><p>可逆矩阵求解</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.solve(A,b.T) <span class=\"comment\"># 如果b已经是一列的就不用转置了</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><h2 id=\"各类距离的python实现\"><a href=\"#各类距离的python实现\" class=\"headerlink\" title=\"各类距离的python实现\"></a>各类距离的python实现</h2><p>   <strong>各类距离会在后面说明</strong></p>\n<ol>\n<li><p>Euclidean Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vector1 = mat([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">vector2 = mat([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div><div class=\"line\"><span class=\"keyword\">print</span> sqrt((vector1-vector2)*(vector1-vector2).T)</div></pre></td></tr></table></figure>\n</li>\n<li><p>Manhattan Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vector1 = mat([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">vector2 = mat([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div><div class=\"line\"><span class=\"keyword\">print</span> sum(abs(vector1-vector2))</div></pre></td></tr></table></figure>\n</li>\n<li><p>Chebyshev Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vector1 = mat([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">vector2 = mat([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div><div class=\"line\"><span class=\"keyword\">print</span> abs(vector1-vector2).max()</div></pre></td></tr></table></figure>\n</li>\n<li><p>Cosine</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cosV12 = dot(vector1,vector2)/(linalg.norm(vector1)*linalg.norm(vector2))</div><div class=\"line\"><span class=\"keyword\">print</span> cosV12</div></pre></td></tr></table></figure>\n</li>\n<li><p>Hamming Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">matV = mat([[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>], [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]])</div><div class=\"line\">smstr = nonzero(matV[<span class=\"number\">0</span>] - matV[<span class=\"number\">1</span>]);</div><div class=\"line\"><span class=\"keyword\">print</span> shape(smstr[<span class=\"number\">0</span>])[<span class=\"number\">1</span>]</div></pre></td></tr></table></figure>\n</li>\n<li><p>Jaccard Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> scipy.spatial.distance <span class=\"keyword\">as</span> dist</div><div class=\"line\">matV = mat([[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>], [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]])</div><div class=\"line\"><span class=\"keyword\">print</span> dist.pdist(matV, <span class=\"string\">'jaccard'</span>)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"机器学习的数学基础\"><a href=\"#机器学习的数学基础\" class=\"headerlink\" title=\"机器学习的数学基础\"></a>机器学习的数学基础</h1><ul>\n<li><strong>范数</strong><blockquote>\n<p>向量的范数可以简单、形象的理解为<strong>向量的长度</strong>，或者向量到坐标系原点的距离，或者<strong>相应空间内的两点之间的距离</strong></p>\n<p><strong><em>向量的范数定义</em></strong> : 向量的范数是一个函数 $ \\parallel x\\parallel $ ,满足非负性 $ \\parallel x\\parallel &gt; 0 $ , 齐次性 $ \\parallel cx\\parallel = \\mid c\\mid\\parallel x\\parallel $ ,三角不等式 $ \\parallel x+y\\parallel \\leq\\parallel x\\parallel +\\parallel y\\parallel $ 。</p>\n<p>L1范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值之和。<br>L2范数：  $\\parallel x\\parallel $为 $ x $向量各个元素平方和的开方，又称 Euclidean 范数或者 Frobenius 范数。<br>Lp范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值 $ p $次方和的  $ 1\\over p $ 次方<br>L $\\infty $范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值最大的那个元素，如下：$$ \\lim_{k\\to\\infty}\\left( \\sum_{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k}<br>$$</p>\n</blockquote>\n</li>\n<li><strong>Minkowski Distance (闵可夫斯基距离)</strong><blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义。<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 间的Minkowski距离定义为：<br>$$ d_{12}=\\sqrt[p]{\\sum_{k=1}^n(x_{1k}-x_{2k})^p} $$<br>其中p是一个变参数。</p>\n<ul>\n<li>当 p=1 时，就是 Manhattan Distance (曼哈顿距离)</li>\n<li>当 p=2 时，就是 Euclidean Distance (欧氏距离)</li>\n<li>当 $ p\\to\\infty $ 时，就是 Chebyshev Distance (切比雪夫距离)</li>\n</ul>\n</blockquote>\n</li>\n<li><strong>Euclideam Distance</strong><blockquote>\n<p>欧氏距离（L2范数）是最易于理解的一种距离计算方法，源于欧氏空间的两点距离公式<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的欧氏距离：<br>$$ d_{12}=\\sqrt{\\sum_{k=1}^n(x_{1k}-x_{2k})^2} $$<br>表示为向量运算的形式：<br>$$ d_{12}=\\sqrt{(A - B)(A - B)^T} $$</p>\n</blockquote>\n</li>\n<li><strong>Manhattan Distance</strong><blockquote>\n<p>曼哈顿距离（L1范数）可以理解为计算网格中两点路径的距离<br>二维平面两点 $ A(x_1,y_1) $ 和 $ B(x_2,y_2) $ 间的曼哈顿距离:<br>$$ d_{12}=\\mid x_1-x_2\\mid +\\mid y_1-y_2\\mid $$<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的曼哈顿距离：<br>$$ d_{12}=\\sum_{k=1}^n\\mid x_{1k}-x_{2k}\\mid $$</p>\n</blockquote>\n</li>\n<li><strong>Chebyshev Distance</strong><blockquote>\n<p>切比雪夫距离类似与棋盘上国王从一点到另一点移动的最少次数，即 $ max(\\mid x_1-x_2\\mid,\\mid y_1-y_2\\mid) $<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的切比雪夫距离：<br>$$ d_{12}=max_i(\\mid x_{1i}-x_{2i}\\mid) $$<br>该公式的另一个等价公式：<br>$$ d_{12}=\\lim_{k\\to\\infty}\\left(\\sum_{i=1}^n\\mid x_{1i}-x_{2i}\\mid^k\\right)^\\frac{1}{k} $$</p>\n</blockquote>\n</li>\n<li><strong>Cosine</strong><blockquote>\n<p>夹角余弦可以用来两个向量方向的差异，机器学习中借用这一概念来衡量样本之间的差异<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的夹角余弦：<br>$$ \\cos\\theta=\\frac{AB}{\\mid A\\mid\\mid B\\mid} $$<br>即：<br>$$ \\cos\\theta=\\frac{\\sum_{k=1}^nx_{1k}x_{2k}}{\\sqrt{\\sum_{k=1}^nx_{1k}^2}\\sqrt{\\sum_{k=1}^nx_{2k}^2}} $$</p>\n</blockquote>\n</li>\n<li><strong>Hamming Distance</strong><blockquote>\n<p>汉明距离的定义：两个等长字符串s1,s2,将其中一个变成另一个需要的最小替换次数。<br>应用：信息编码（为了增强容错性，应使得编码间的最小汉明距离尽可能大）</p>\n</blockquote>\n</li>\n<li><strong>Jaccard Similarity Coefficient(杰卡德相似系数)</strong><blockquote>\n<p>杰卡德相似系数：两个集合A,B的交集元素在并集元素中所占的比例，用符号 $ J(A,B) $ 表示<br>$$ J(A,B)=\\frac{\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$<br>杰卡德距：与杰卡德相似系数相反的概念：<br>$$ J_\\delta(A,B)=1-J(A,B)=\\frac{\\mid A\\cup B\\mid-\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$</p>\n</blockquote>\n</li>\n<li><p><strong>特征间的相关性</strong></p>\n<blockquote>\n<ol>\n<li><p>相关系数与相关距离<br> 相关系数：<br> $$ \\rho_{XY}=\\frac{Cov(X,Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}=\\frac{E((X-EX)(Y-EY))}{\\sqrt{D(X)}\\sqrt{D(Y)}} $$<br> 相关距离：<br> $$ D_{XY}=1-\\rho_{XY} $$<br>python实现：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">featuremat = mat(...)  <span class=\"comment\"># 初始化矩阵</span></div><div class=\"line\"><span class=\"comment\"># 计算均值</span></div><div class=\"line\">mv1 = mean(featuremat[<span class=\"number\">0</span>])  <span class=\"comment\"># 计算第一列的均值</span></div><div class=\"line\">mv2 = mean(featuremat[<span class=\"number\">1</span>])  <span class=\"comment\"># 计算第二列的均值</span></div><div class=\"line\"><span class=\"comment\">#计算两列的标准差</span></div><div class=\"line\">dv1 = std(featuremat[<span class=\"number\">0</span>]) </div><div class=\"line\">dv2 = std(featuremat[<span class=\"number\">1</span>])</div><div class=\"line\">corref = mean(multiply(featuremat[<span class=\"number\">0</span>]-mv1,featuremat[<span class=\"number\">1</span>]-mv2))/(dv1*dv2)</div><div class=\"line\"><span class=\"keyword\">print</span> corref  <span class=\"comment\">#输出相关系数</span></div><div class=\"line\"><span class=\"keyword\">print</span> corrcoef(featuremat)  <span class=\"comment\">#输出相关系数矩阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>马氏距离</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"科学算法库的安装-linux\"><a href=\"#科学算法库的安装-linux\" class=\"headerlink\" title=\"科学算法库的安装(linux)\"></a>科学算法库的安装(linux)</h1><ul>\n<li>1.安装Numpy<pre><code>sudo apt-get install python-numpy\n</code></pre></li>\n<li>2.安装Scipy<pre><code>sudo apt-get install python-numpy\n</code></pre></li>\n<li>3.Matplotlib<pre><code>sudo apt-get install tk-dev\nsudo apt-get install python-gtk2-dev\nsudo apt-get install python-pyside\n</code></pre></li>\n<li>4.spyder GUI环境<pre><code>sudo apt-get install spyder\n</code></pre></li>\n</ul>\n<p><br></p>\n<ul>\n<li><p><strong>上述安装完毕后，可以利用</strong></p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#! /usr/bin/python</span></div><div class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</div><div class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</div><div class=\"line\"></div><div class=\"line\">x = np.linspace(<span class=\"number\">0</span>,<span class=\"number\">4</span>*<span class=\"number\">3.1415</span>,<span class=\"number\">100</span>)</div><div class=\"line\">y = np.sin(x)</div><div class=\"line\"></div><div class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>,<span class=\"number\">4</span>))</div><div class=\"line\">plt.plot(x,y,label=<span class=\"string\">\"$sin(x)$\"</span>,color=<span class=\"string\">\"red\"</span>,linewidth=<span class=\"number\">2</span>)</div><div class=\"line\">plt.legend()</div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n<p><strong>进行测试。若生成正弦曲线窗口，则配置完成. </strong></p>\n</li>\n</ul>\n<h1 id=\"NumPy的基本操作\"><a href=\"#NumPy的基本操作\" class=\"headerlink\" title=\"NumPy的基本操作\"></a>NumPy的基本操作</h1><ul>\n<li><h2 id=\"Numpy-的导入\"><a href=\"#Numpy-的导入\" class=\"headerlink\" title=\"Numpy 的导入\"></a>Numpy 的导入</h2><pre><code>import numpy as np\n</code></pre><p>  这种写法在使用相关函数的时候需要写明是哪个包的，如:</p>\n<pre><code>myZero = np.zeros([3,5])\n</code></pre><p>  还可以导入包全局使用</p>\n<pre><code>from numpy import *\n</code></pre></li>\n</ul>\n<ul>\n<li><h2 id=\"NumPy-的基本操作\"><a href=\"#NumPy-的基本操作\" class=\"headerlink\" title=\"NumPy 的基本操作\"></a>NumPy 的基本操作</h2><ol>\n<li><p>创建全0矩阵和全1矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">myZero = zeros([n,m])</div><div class=\"line\">myOne = ones([n,m])</div></pre></td></tr></table></figure>\n</li>\n<li><p>生成随机矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">myRand = random.rand(n,m)   <span class=\"comment\"># n 行 m 列的 0～1 之间的随机数矩阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>生成单位矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">myEye = eye(n)   <span class=\"comment\"># n * n 的单位阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>将一个数组转化为一个矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">myMatrix = mat([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]])</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵所有元素求和</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = sum(myMatrix)</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵各元素的乘积</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">matrix = multiply(matrix1, matrix2) <span class=\"comment\"># matrix1 和 matrix2 对应元素相乘的矩阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>求矩阵的 n 次幂</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">matrix = power(myMatrix, n) <span class=\"comment\">#生成一个矩阵，矩阵内部的元素是原矩阵对应元素的n次幂</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的转置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> matrix.T   <span class=\"comment\">#打印转置后的矩阵，不改变原矩阵</span></div><div class=\"line\">matrix.transpose()   <span class=\"comment\">#同上</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的其他操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[m, n] = shape(matrix) <span class=\"comment\"># m, n为矩阵的行列数</span></div><div class=\"line\">myscl1 = matrix[<span class=\"number\">0</span>] <span class=\"comment\"># 矩阵的切片操作，取第一行</span></div><div class=\"line\">myscl2 = matrix.T[<span class=\"number\">0</span>] <span class=\"comment\"># 矩阵的切片操作，取第一列</span></div><div class=\"line\">mycpmat = matrix.copy() <span class=\"comment\"># 矩阵的复制</span></div><div class=\"line\"><span class=\"keyword\">print</span> matrix1 &lt; matrix2 <span class=\"comment\"># 矩阵的比较，会逐一比较对应的每一个元素，并输出一个仅包含True, False 的相同大小的矩阵</span></div><div class=\"line\">dot(m1,m2)  <span class=\"comment\">#计算m1,m2的点积</span></div><div class=\"line\">norm(v)  <span class=\"comment\">#计算向量V的范数</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><h2 id=\"Linalg线性代数库\"><a href=\"#Linalg线性代数库\" class=\"headerlink\" title=\"Linalg线性代数库\"></a>Linalg线性代数库</h2><ol>\n<li><p>矩阵的行列式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.det(matrix)</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的逆</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.inv(matrix)</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的对称</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> matrix * matrix.T</div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵的秩</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.matrix_rank(A)</div></pre></td></tr></table></figure>\n</li>\n<li><p>可逆矩阵求解</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> linalg.solve(A,b.T) <span class=\"comment\"># 如果b已经是一列的就不用转置了</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><h2 id=\"各类距离的python实现\"><a href=\"#各类距离的python实现\" class=\"headerlink\" title=\"各类距离的python实现\"></a>各类距离的python实现</h2><p>   <strong>各类距离会在后面说明</strong></p>\n<ol>\n<li><p>Euclidean Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vector1 = mat([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">vector2 = mat([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div><div class=\"line\"><span class=\"keyword\">print</span> sqrt((vector1-vector2)*(vector1-vector2).T)</div></pre></td></tr></table></figure>\n</li>\n<li><p>Manhattan Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vector1 = mat([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">vector2 = mat([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div><div class=\"line\"><span class=\"keyword\">print</span> sum(abs(vector1-vector2))</div></pre></td></tr></table></figure>\n</li>\n<li><p>Chebyshev Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vector1 = mat([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\">vector2 = mat([<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</div><div class=\"line\"><span class=\"keyword\">print</span> abs(vector1-vector2).max()</div></pre></td></tr></table></figure>\n</li>\n<li><p>Cosine</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cosV12 = dot(vector1,vector2)/(linalg.norm(vector1)*linalg.norm(vector2))</div><div class=\"line\"><span class=\"keyword\">print</span> cosV12</div></pre></td></tr></table></figure>\n</li>\n<li><p>Hamming Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">matV = mat([[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>], [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]])</div><div class=\"line\">smstr = nonzero(matV[<span class=\"number\">0</span>] - matV[<span class=\"number\">1</span>]);</div><div class=\"line\"><span class=\"keyword\">print</span> shape(smstr[<span class=\"number\">0</span>])[<span class=\"number\">1</span>]</div></pre></td></tr></table></figure>\n</li>\n<li><p>Jaccard Distance</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> scipy.spatial.distance <span class=\"keyword\">as</span> dist</div><div class=\"line\">matV = mat([[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>], [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]])</div><div class=\"line\"><span class=\"keyword\">print</span> dist.pdist(matV, <span class=\"string\">'jaccard'</span>)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"机器学习的数学基础\"><a href=\"#机器学习的数学基础\" class=\"headerlink\" title=\"机器学习的数学基础\"></a>机器学习的数学基础</h1><ul>\n<li><strong>范数</strong><blockquote>\n<p>向量的范数可以简单、形象的理解为<strong>向量的长度</strong>，或者向量到坐标系原点的距离，或者<strong>相应空间内的两点之间的距离</strong></p>\n<p><strong><em>向量的范数定义</em></strong> : 向量的范数是一个函数 $ \\parallel x\\parallel $ ,满足非负性 $ \\parallel x\\parallel &gt; 0 $ , 齐次性 $ \\parallel cx\\parallel = \\mid c\\mid\\parallel x\\parallel $ ,三角不等式 $ \\parallel x+y\\parallel \\leq\\parallel x\\parallel +\\parallel y\\parallel $ 。</p>\n<p>L1范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值之和。<br>L2范数：  $\\parallel x\\parallel $为 $ x $向量各个元素平方和的开方，又称 Euclidean 范数或者 Frobenius 范数。<br>Lp范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值 $ p $次方和的  $ 1\\over p $ 次方<br>L $\\infty $范数：  $\\parallel x\\parallel $为 $ x $向量各个元素绝对值最大的那个元素，如下：$$ \\lim_{k\\to\\infty}\\left( \\sum_{i=1}^n\\mid p_i-q_i\\mid ^k\\right)^\\frac{1}{k}<br>$$</p>\n</blockquote>\n</li>\n<li><strong>Minkowski Distance (闵可夫斯基距离)</strong><blockquote>\n<p>严格意义上讲，Minkowski Distance 不是一种距离，而是一组距离的定义。<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 间的Minkowski距离定义为：<br>$$ d_{12}=\\sqrt[p]{\\sum_{k=1}^n(x_{1k}-x_{2k})^p} $$<br>其中p是一个变参数。</p>\n<ul>\n<li>当 p=1 时，就是 Manhattan Distance (曼哈顿距离)</li>\n<li>当 p=2 时，就是 Euclidean Distance (欧氏距离)</li>\n<li>当 $ p\\to\\infty $ 时，就是 Chebyshev Distance (切比雪夫距离)</li>\n</ul>\n</blockquote>\n</li>\n<li><strong>Euclideam Distance</strong><blockquote>\n<p>欧氏距离（L2范数）是最易于理解的一种距离计算方法，源于欧氏空间的两点距离公式<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的欧氏距离：<br>$$ d_{12}=\\sqrt{\\sum_{k=1}^n(x_{1k}-x_{2k})^2} $$<br>表示为向量运算的形式：<br>$$ d_{12}=\\sqrt{(A - B)(A - B)^T} $$</p>\n</blockquote>\n</li>\n<li><strong>Manhattan Distance</strong><blockquote>\n<p>曼哈顿距离（L1范数）可以理解为计算网格中两点路径的距离<br>二维平面两点 $ A(x_1,y_1) $ 和 $ B(x_2,y_2) $ 间的曼哈顿距离:<br>$$ d_{12}=\\mid x_1-x_2\\mid +\\mid y_1-y_2\\mid $$<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的曼哈顿距离：<br>$$ d_{12}=\\sum_{k=1}^n\\mid x_{1k}-x_{2k}\\mid $$</p>\n</blockquote>\n</li>\n<li><strong>Chebyshev Distance</strong><blockquote>\n<p>切比雪夫距离类似与棋盘上国王从一点到另一点移动的最少次数，即 $ max(\\mid x_1-x_2\\mid,\\mid y_1-y_2\\mid) $<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的切比雪夫距离：<br>$$ d_{12}=max_i(\\mid x_{1i}-x_{2i}\\mid) $$<br>该公式的另一个等价公式：<br>$$ d_{12}=\\lim_{k\\to\\infty}\\left(\\sum_{i=1}^n\\mid x_{1i}-x_{2i}\\mid^k\\right)^\\frac{1}{k} $$</p>\n</blockquote>\n</li>\n<li><strong>Cosine</strong><blockquote>\n<p>夹角余弦可以用来两个向量方向的差异，机器学习中借用这一概念来衡量样本之间的差异<br>两个n维向量 $ A(x_{11},x_{12},\\cdots,x_{1n}) $ 与 $ B(x_{21},x_{22},\\cdots,x_{2n}) $ 之间的夹角余弦：<br>$$ \\cos\\theta=\\frac{AB}{\\mid A\\mid\\mid B\\mid} $$<br>即：<br>$$ \\cos\\theta=\\frac{\\sum_{k=1}^nx_{1k}x_{2k}}{\\sqrt{\\sum_{k=1}^nx_{1k}^2}\\sqrt{\\sum_{k=1}^nx_{2k}^2}} $$</p>\n</blockquote>\n</li>\n<li><strong>Hamming Distance</strong><blockquote>\n<p>汉明距离的定义：两个等长字符串s1,s2,将其中一个变成另一个需要的最小替换次数。<br>应用：信息编码（为了增强容错性，应使得编码间的最小汉明距离尽可能大）</p>\n</blockquote>\n</li>\n<li><strong>Jaccard Similarity Coefficient(杰卡德相似系数)</strong><blockquote>\n<p>杰卡德相似系数：两个集合A,B的交集元素在并集元素中所占的比例，用符号 $ J(A,B) $ 表示<br>$$ J(A,B)=\\frac{\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$<br>杰卡德距：与杰卡德相似系数相反的概念：<br>$$ J_\\delta(A,B)=1-J(A,B)=\\frac{\\mid A\\cup B\\mid-\\mid A\\cap B\\mid}{\\mid A\\cup B\\mid} $$</p>\n</blockquote>\n</li>\n<li><p><strong>特征间的相关性</strong></p>\n<blockquote>\n<ol>\n<li><p>相关系数与相关距离<br> 相关系数：<br> $$ \\rho_{XY}=\\frac{Cov(X,Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}=\\frac{E((X-EX)(Y-EY))}{\\sqrt{D(X)}\\sqrt{D(Y)}} $$<br> 相关距离：<br> $$ D_{XY}=1-\\rho_{XY} $$<br>python实现：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">featuremat = mat(...)  <span class=\"comment\"># 初始化矩阵</span></div><div class=\"line\"><span class=\"comment\"># 计算均值</span></div><div class=\"line\">mv1 = mean(featuremat[<span class=\"number\">0</span>])  <span class=\"comment\"># 计算第一列的均值</span></div><div class=\"line\">mv2 = mean(featuremat[<span class=\"number\">1</span>])  <span class=\"comment\"># 计算第二列的均值</span></div><div class=\"line\"><span class=\"comment\">#计算两列的标准差</span></div><div class=\"line\">dv1 = std(featuremat[<span class=\"number\">0</span>]) </div><div class=\"line\">dv2 = std(featuremat[<span class=\"number\">1</span>])</div><div class=\"line\">corref = mean(multiply(featuremat[<span class=\"number\">0</span>]-mv1,featuremat[<span class=\"number\">1</span>]-mv2))/(dv1*dv2)</div><div class=\"line\"><span class=\"keyword\">print</span> corref  <span class=\"comment\">#输出相关系数</span></div><div class=\"line\"><span class=\"keyword\">print</span> corrcoef(featuremat)  <span class=\"comment\">#输出相关系数矩阵</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>马氏距离</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n"},{"title":"我的第一篇博客","date":"2015-03-15T07:06:48.000Z","_content":"为了搞这个博客我确实花了不少功夫，从昨天晚上12点左右就开始了，看教程啊，然后自己操作去搞。加上一些教程由于时间的问题，总是存在着一些坑要填。不过麻烦归麻烦，我也总算是在3点的时候把东西推到github上面去了。\n\n今天在申请免费的一级域名，免费的太难找到了，找到的又都是坑。反正这段时间域名解析什么的就慢慢来吧，不着急。\n\n以前没有认真看markdown，只是能把每次的东西更新到tower上就满足了。现在还是认真看看markdown吧，毕竟写就要认真写。\n\n> - p.s. 附上一个大坑，也提醒一下我自己\n> **一定记住冒号后面留一个空格**\n","source":"_posts/我的第一篇博客.md","raw":"title: \"我的第一篇博客\"\ndate: 2015-03-15 15:06:48\ncategories: \"杂项\"\ntags:\n---\n为了搞这个博客我确实花了不少功夫，从昨天晚上12点左右就开始了，看教程啊，然后自己操作去搞。加上一些教程由于时间的问题，总是存在着一些坑要填。不过麻烦归麻烦，我也总算是在3点的时候把东西推到github上面去了。\n\n今天在申请免费的一级域名，免费的太难找到了，找到的又都是坑。反正这段时间域名解析什么的就慢慢来吧，不着急。\n\n以前没有认真看markdown，只是能把每次的东西更新到tower上就满足了。现在还是认真看看markdown吧，毕竟写就要认真写。\n\n> - p.s. 附上一个大坑，也提醒一下我自己\n> **一定记住冒号后面留一个空格**\n","slug":"我的第一篇博客","published":1,"updated":"2018-01-17T08:11:42.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbv9000onuyeqgzbddhq","content":"<p>为了搞这个博客我确实花了不少功夫，从昨天晚上12点左右就开始了，看教程啊，然后自己操作去搞。加上一些教程由于时间的问题，总是存在着一些坑要填。不过麻烦归麻烦，我也总算是在3点的时候把东西推到github上面去了。</p>\n<p>今天在申请免费的一级域名，免费的太难找到了，找到的又都是坑。反正这段时间域名解析什么的就慢慢来吧，不着急。</p>\n<p>以前没有认真看markdown，只是能把每次的东西更新到tower上就满足了。现在还是认真看看markdown吧，毕竟写就要认真写。</p>\n<blockquote>\n<ul>\n<li>p.s. 附上一个大坑，也提醒一下我自己<br><strong>一定记住冒号后面留一个空格</strong></li>\n</ul>\n</blockquote>\n","excerpt":"","more":"<p>为了搞这个博客我确实花了不少功夫，从昨天晚上12点左右就开始了，看教程啊，然后自己操作去搞。加上一些教程由于时间的问题，总是存在着一些坑要填。不过麻烦归麻烦，我也总算是在3点的时候把东西推到github上面去了。</p>\n<p>今天在申请免费的一级域名，免费的太难找到了，找到的又都是坑。反正这段时间域名解析什么的就慢慢来吧，不着急。</p>\n<p>以前没有认真看markdown，只是能把每次的东西更新到tower上就满足了。现在还是认真看看markdown吧，毕竟写就要认真写。</p>\n<blockquote>\n<ul>\n<li>p.s. 附上一个大坑，也提醒一下我自己<br><strong>一定记住冒号后面留一个空格</strong></li>\n</ul>\n</blockquote>\n"},{"title":"背包九讲","date":"2015-07-21T13:25:48.000Z","_content":"# 0/1背包问题\n\n> 有N件物品和一个容量为V的背包。放入第i件物品耗费的空间是Ci，得到的价值是Wi。求解将哪些物品装入背包可使价值总和最大？\n\n  将每一件物品从1到n编号，从第1件物品开始，每一件物品就只有两个状态：放进背包了 / 没有放进背包。\n\n  我们画一张表格，行对应着每一件物品，列对应着背包的重量，那么pack\\[i\\][j]就表示  **前i件物品，背包最大承重j** 这个子问题的解。\n\n 给一组数据作为样例：\n\n\t 5 10\n\t 6 2\n\t 3 2\n\t 5 6\n\t 4 5\n\t 6 4\n\n  第一行表示有5件物品，10为最大承重，2-6行为5个物品的价值和重量。\n\n**生成以下的表格**\n\n\t0\t6\t6\t6\t6\t 6\t 6\t 6\t 6\t 6\n\t0\t6\t6\t9\t9\t 9\t 9\t 9\t 9\t 9\n\t0\t6\t6\t9\t9\t 9\t 9\t11\t11\t14\n\t0\t6\t6\t9\t9\t 9\t10\t11\t13\t14\n\t0\t6\t6\t9\t9\t12\t12\t15\t15\t15\n\n\n　所以最终的结果是最后一行最后一列的 **15**\n\n**给出代码：**\n\n```c\n\n/* 01 package problem */\n\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint pack[100][1000];\nint c[100],w[100];\n\nvoid make(int n, int r){\n\tmemset(pack,0,sizeof(pack));\n    for (int i = 1; i <= n; i++)\n    for (int j = w[i]; j <= r; j++)\n            pack[i][j] = max(pack[i - 1][j - c[i]] + w[i], pack[i - 1][j]);\n    cout<<pack[n][r];\n}\n\nint main(){\n    int t,n,V;\n    cin>>t;\n    while(t--){ //多组数据\n        cin>>n>>V;\n        for (int i = 1; i <= n; i++)\n            cin>>c[i]>>w[i];\n        make(n,V);\n    }\n    return 0;\n}\n\n```\n\n**代码优化**\n\n这个代码在时间上应该已经不能再优化了，但是还可以考虑空间复杂度的优化。\n\n**优化的基本思路：**\n\n考虑所用到的状态转移方程: `pack[i][j] = max(pack[i-1][j-c[i]] + w[i], pack[i-1][j]);` 可以发现 `pack[i][j]` 的值并不和整个二维表的每一个数字的值都有关，而是仅仅和上面一行的值有关，所以可以使用 `pack[2][n]` 这么大的数组来存储结果。\n\n考虑状态转移方程的实际情况，还可以使用**一维数组**来进行运算，但是要注意的是，此时，循环应该从后往前进行。因为如果是按从前往后的顺序，那么 `pack[i][j] = max(pack[i][j-c[i]] + w[i] , pack[i][j]);` 中进行比较的两个值 `pack[i][j]` 是没有更新的，也就是 `pack[i-1][j] ` 的值，而 `pack[i][j - c[i]]`一定是前面被更新过的，也就是 `pack[i][j-w[i]]` 的值。这就是说，`max()` 比较的两个数是属于原来二维数组中不同的两行，而不是我们期望的相同的两行。\n\n如果上面的说法不能理解我们不妨这样：有一件物品的性价比很高，在pack数组的某个位置，我们第一次将这个物品放入背包中，但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会***再次***将这个物品添加进去。\n\n**优化后的代码**\n\n\n```c\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint pack[10000],c[1000],w[1000];\n\nvoid make(int n, int r){\n    memset(pack,0,sizeof(pack));\n    for (int i = 1; i <= n; i++)\n        for (int j = r; j >= w[i]; j--)\n            pack[j] = max(pack[j], pack[j - c[i]] + w[i]);\n    cout<<pack[r]<<endl;\n}\n\nint main(){\n    int n,t,V;\n    cin>>t;\n    while(t--){\n        cin>>n>>V;\n        for (int i = 1; i <= n; i++) cin>>c[i]>>w[i];\n        make(n,V);\n    }\n    return 0;\n}\n\n```\n\n**初始化问题：**\n\n> - 如果限定背包必须装满，那么需要将数组初始化为 -∞ （负无穷大）\n\n> - 如果背包可以不装满，那么数组初始化为0\n\n*为了后面的书写方便，我们把代码改成这样*\n```cpp\nvoid ZeroOnePack(int c,int w){\n\tfor (int i = V; i >= c; i--)\n\t\tpack[i] = max(pack[i], pack[i - c] + w);\n}\n```\n*这样01背包问题的主要代码就是这样：*\n\n```cpp\nfor (int i = 0; i < n; i++)\n\tZeroOnePack(c[i],w[i]);\n```\n\n这样ZeroOnePack()这个函数就专门解决了**“放一个物品”**的问题\n\n#  完全背包问题\n\n> 完全背包问题和0/1背包问题几乎一模一样，不同的就是物品不再是一个，而是无数个\n\n**思路**\n\n完全背包不同处是原来的一个物品变成了无数个，但是我们还是可以把它变成0/1背包问题的，试想一下，即使拥有无数个物品，但是真的可以用无数个吗？\n\n不可能，因为背包的容量有限，所以每个物品c,w**最多可以使用[V/c]个**，所以以下面的数据为例：\n\n\t\tc:\t3\t2\t5\t4\n\t\tw:\t7\t4\t2\t5\n\t\tV = 10\n\n我们完全可以把这组数据改成这样：\n\n\t\tc:\t3\t3\t3\t2\t2\t2\t2\t2\t5\t5\t4\t4\n\t\tw:\t7\t7\t7\t4\t4\t4\t4\t4\t2\t2\t5\t5\n\n原因自然是背包容量最大为10,所以占用空间为3的物品最多放3个，修改过后的数据就可以用0/1背包的方法处理\n\n那难道完全背包需要重开一个c2[],w2[]，然后按0/1背包处理吗？\n\n当然不是，还记得我们将0/1背包进行优化时说的如果循环从前向后进行会发生什么后果吗？\n\n这一句 **“但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会再次将这个物品添加进去。”**\n\n看到了？0/1背包时为了避免重复，我们将循环改为从后往前，但是完全背包是可以重复使用物品的，对吧？所以代码：\n\n```C\nvoid CompletePack(c,w){\n\tfor (int i = c; i <= V; i++)\n\t\tpack[i] = max(pack[i],pack[i - c] + w )\n}\n```\n\n怎么样，和0/1背包只有一点点的差别对不对？\n\n# 3.多重背包问题\n\n> 多重背包和0/1背包不同的地方就是物品不是一个而是有m个\n\n所以我们还是就一个物品c,w,m分析：\n\n对于m可能有两种情况：\n1. `m >= [V/c]`，这种情况明显是完全背包\n2. `0 < m < [v/c]`，对于这种情况需要认真分析一下\n\n我们仍然需要按照0/1背包的思路把这些物品拆开，而且我们要保证我们拆出来的这些物品可以通过组合表示出1到m任意件物。\n\n我们可以考虑二进制的计数方法，这样我们把物品拆成`(c,w) , (2c,2w) , (4c,4w) …… [(m-2^k)*c , (m-2^k)*w)]`\n\n不管最优解会在这件物品中取几件，我们都可以用我们拆出来的这些物品来表示（请自己证明，二进制的思想）\n\n所以，有了思路，代码就简单了：\n\n```c\nvoid MultiplePack(c,w,m){\n\tif (c * m >= V) {\n\t\tCompletePack(c,w);\n\t\treturn;\n\t}\n\tk = 1;\n\twhile (k < m) {\n\t\tZeroOnePack(c*k,w*k);\n\t\tm = m - k;\n\t\tk = 2 * k;\n\t}\n\tZeroOnePack(c * m, w * m);\n}\n```\n\n***其实就是0/1背包和完全背包的组合，有木有？***\n\n未完待续……","source":"_posts/背包九讲.md","raw":"title: \"背包九讲\"\ndate: 2015-07-21 21:25:48\ncategories: \"算法\"\ntags:\n  - 背包问题\n  - 算法\n  - C/C++\n---\n# 0/1背包问题\n\n> 有N件物品和一个容量为V的背包。放入第i件物品耗费的空间是Ci，得到的价值是Wi。求解将哪些物品装入背包可使价值总和最大？\n\n  将每一件物品从1到n编号，从第1件物品开始，每一件物品就只有两个状态：放进背包了 / 没有放进背包。\n\n  我们画一张表格，行对应着每一件物品，列对应着背包的重量，那么pack\\[i\\][j]就表示  **前i件物品，背包最大承重j** 这个子问题的解。\n\n 给一组数据作为样例：\n\n\t 5 10\n\t 6 2\n\t 3 2\n\t 5 6\n\t 4 5\n\t 6 4\n\n  第一行表示有5件物品，10为最大承重，2-6行为5个物品的价值和重量。\n\n**生成以下的表格**\n\n\t0\t6\t6\t6\t6\t 6\t 6\t 6\t 6\t 6\n\t0\t6\t6\t9\t9\t 9\t 9\t 9\t 9\t 9\n\t0\t6\t6\t9\t9\t 9\t 9\t11\t11\t14\n\t0\t6\t6\t9\t9\t 9\t10\t11\t13\t14\n\t0\t6\t6\t9\t9\t12\t12\t15\t15\t15\n\n\n　所以最终的结果是最后一行最后一列的 **15**\n\n**给出代码：**\n\n```c\n\n/* 01 package problem */\n\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nint pack[100][1000];\nint c[100],w[100];\n\nvoid make(int n, int r){\n\tmemset(pack,0,sizeof(pack));\n    for (int i = 1; i <= n; i++)\n    for (int j = w[i]; j <= r; j++)\n            pack[i][j] = max(pack[i - 1][j - c[i]] + w[i], pack[i - 1][j]);\n    cout<<pack[n][r];\n}\n\nint main(){\n    int t,n,V;\n    cin>>t;\n    while(t--){ //多组数据\n        cin>>n>>V;\n        for (int i = 1; i <= n; i++)\n            cin>>c[i]>>w[i];\n        make(n,V);\n    }\n    return 0;\n}\n\n```\n\n**代码优化**\n\n这个代码在时间上应该已经不能再优化了，但是还可以考虑空间复杂度的优化。\n\n**优化的基本思路：**\n\n考虑所用到的状态转移方程: `pack[i][j] = max(pack[i-1][j-c[i]] + w[i], pack[i-1][j]);` 可以发现 `pack[i][j]` 的值并不和整个二维表的每一个数字的值都有关，而是仅仅和上面一行的值有关，所以可以使用 `pack[2][n]` 这么大的数组来存储结果。\n\n考虑状态转移方程的实际情况，还可以使用**一维数组**来进行运算，但是要注意的是，此时，循环应该从后往前进行。因为如果是按从前往后的顺序，那么 `pack[i][j] = max(pack[i][j-c[i]] + w[i] , pack[i][j]);` 中进行比较的两个值 `pack[i][j]` 是没有更新的，也就是 `pack[i-1][j] ` 的值，而 `pack[i][j - c[i]]`一定是前面被更新过的，也就是 `pack[i][j-w[i]]` 的值。这就是说，`max()` 比较的两个数是属于原来二维数组中不同的两行，而不是我们期望的相同的两行。\n\n如果上面的说法不能理解我们不妨这样：有一件物品的性价比很高，在pack数组的某个位置，我们第一次将这个物品放入背包中，但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会***再次***将这个物品添加进去。\n\n**优化后的代码**\n\n\n```c\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint pack[10000],c[1000],w[1000];\n\nvoid make(int n, int r){\n    memset(pack,0,sizeof(pack));\n    for (int i = 1; i <= n; i++)\n        for (int j = r; j >= w[i]; j--)\n            pack[j] = max(pack[j], pack[j - c[i]] + w[i]);\n    cout<<pack[r]<<endl;\n}\n\nint main(){\n    int n,t,V;\n    cin>>t;\n    while(t--){\n        cin>>n>>V;\n        for (int i = 1; i <= n; i++) cin>>c[i]>>w[i];\n        make(n,V);\n    }\n    return 0;\n}\n\n```\n\n**初始化问题：**\n\n> - 如果限定背包必须装满，那么需要将数组初始化为 -∞ （负无穷大）\n\n> - 如果背包可以不装满，那么数组初始化为0\n\n*为了后面的书写方便，我们把代码改成这样*\n```cpp\nvoid ZeroOnePack(int c,int w){\n\tfor (int i = V; i >= c; i--)\n\t\tpack[i] = max(pack[i], pack[i - c] + w);\n}\n```\n*这样01背包问题的主要代码就是这样：*\n\n```cpp\nfor (int i = 0; i < n; i++)\n\tZeroOnePack(c[i],w[i]);\n```\n\n这样ZeroOnePack()这个函数就专门解决了**“放一个物品”**的问题\n\n#  完全背包问题\n\n> 完全背包问题和0/1背包问题几乎一模一样，不同的就是物品不再是一个，而是无数个\n\n**思路**\n\n完全背包不同处是原来的一个物品变成了无数个，但是我们还是可以把它变成0/1背包问题的，试想一下，即使拥有无数个物品，但是真的可以用无数个吗？\n\n不可能，因为背包的容量有限，所以每个物品c,w**最多可以使用[V/c]个**，所以以下面的数据为例：\n\n\t\tc:\t3\t2\t5\t4\n\t\tw:\t7\t4\t2\t5\n\t\tV = 10\n\n我们完全可以把这组数据改成这样：\n\n\t\tc:\t3\t3\t3\t2\t2\t2\t2\t2\t5\t5\t4\t4\n\t\tw:\t7\t7\t7\t4\t4\t4\t4\t4\t2\t2\t5\t5\n\n原因自然是背包容量最大为10,所以占用空间为3的物品最多放3个，修改过后的数据就可以用0/1背包的方法处理\n\n那难道完全背包需要重开一个c2[],w2[]，然后按0/1背包处理吗？\n\n当然不是，还记得我们将0/1背包进行优化时说的如果循环从前向后进行会发生什么后果吗？\n\n这一句 **“但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会再次将这个物品添加进去。”**\n\n看到了？0/1背包时为了避免重复，我们将循环改为从后往前，但是完全背包是可以重复使用物品的，对吧？所以代码：\n\n```C\nvoid CompletePack(c,w){\n\tfor (int i = c; i <= V; i++)\n\t\tpack[i] = max(pack[i],pack[i - c] + w )\n}\n```\n\n怎么样，和0/1背包只有一点点的差别对不对？\n\n# 3.多重背包问题\n\n> 多重背包和0/1背包不同的地方就是物品不是一个而是有m个\n\n所以我们还是就一个物品c,w,m分析：\n\n对于m可能有两种情况：\n1. `m >= [V/c]`，这种情况明显是完全背包\n2. `0 < m < [v/c]`，对于这种情况需要认真分析一下\n\n我们仍然需要按照0/1背包的思路把这些物品拆开，而且我们要保证我们拆出来的这些物品可以通过组合表示出1到m任意件物。\n\n我们可以考虑二进制的计数方法，这样我们把物品拆成`(c,w) , (2c,2w) , (4c,4w) …… [(m-2^k)*c , (m-2^k)*w)]`\n\n不管最优解会在这件物品中取几件，我们都可以用我们拆出来的这些物品来表示（请自己证明，二进制的思想）\n\n所以，有了思路，代码就简单了：\n\n```c\nvoid MultiplePack(c,w,m){\n\tif (c * m >= V) {\n\t\tCompletePack(c,w);\n\t\treturn;\n\t}\n\tk = 1;\n\twhile (k < m) {\n\t\tZeroOnePack(c*k,w*k);\n\t\tm = m - k;\n\t\tk = 2 * k;\n\t}\n\tZeroOnePack(c * m, w * m);\n}\n```\n\n***其实就是0/1背包和完全背包的组合，有木有？***\n\n未完待续……","slug":"背包九讲","published":1,"updated":"2018-01-17T08:11:42.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbvd000snuyezbnsza9n","content":"<h1 id=\"0-1背包问题\"><a href=\"#0-1背包问题\" class=\"headerlink\" title=\"0/1背包问题\"></a>0/1背包问题</h1><blockquote>\n<p>有N件物品和一个容量为V的背包。放入第i件物品耗费的空间是Ci，得到的价值是Wi。求解将哪些物品装入背包可使价值总和最大？</p>\n</blockquote>\n<p>  将每一件物品从1到n编号，从第1件物品开始，每一件物品就只有两个状态：放进背包了 / 没有放进背包。</p>\n<p>  我们画一张表格，行对应着每一件物品，列对应着背包的重量，那么pack[i][j]就表示  <strong>前i件物品，背包最大承重j</strong> 这个子问题的解。</p>\n<p> 给一组数据作为样例：</p>\n<pre><code>5 10\n6 2\n3 2\n5 6\n4 5\n6 4\n</code></pre><p>  第一行表示有5件物品，10为最大承重，2-6行为5个物品的价值和重量。</p>\n<p><strong>生成以下的表格</strong></p>\n<pre><code>0    6    6    6    6     6     6     6     6     6\n0    6    6    9    9     9     9     9     9     9\n0    6    6    9    9     9     9    11    11    14\n0    6    6    9    9     9    10    11    13    14\n0    6    6    9    9    12    12    15    15    15\n</code></pre><p>　所以最终的结果是最后一行最后一列的 <strong>15</strong></p>\n<p><strong>给出代码：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 01 package problem */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> pack[<span class=\"number\">100</span>][<span class=\"number\">1000</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> c[<span class=\"number\">100</span>],w[<span class=\"number\">100</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">make</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(pack,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(pack));</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = w[i]; j &lt;= r; j++)</div><div class=\"line\">            pack[i][j] = max(pack[i - <span class=\"number\">1</span>][j - c[i]] + w[i], pack[i - <span class=\"number\">1</span>][j]);</div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;pack[n][r];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> t,n,V;</div><div class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</div><div class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123; <span class=\"comment\">//多组数据</span></div><div class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;V;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</div><div class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;c[i]&gt;&gt;w[i];</div><div class=\"line\">        make(n,V);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>代码优化</strong></p>\n<p>这个代码在时间上应该已经不能再优化了，但是还可以考虑空间复杂度的优化。</p>\n<p><strong>优化的基本思路：</strong></p>\n<p>考虑所用到的状态转移方程: <code>pack[i][j] = max(pack[i-1][j-c[i]] + w[i], pack[i-1][j]);</code> 可以发现 <code>pack[i][j]</code> 的值并不和整个二维表的每一个数字的值都有关，而是仅仅和上面一行的值有关，所以可以使用 <code>pack[2][n]</code> 这么大的数组来存储结果。</p>\n<p>考虑状态转移方程的实际情况，还可以使用<strong>一维数组</strong>来进行运算，但是要注意的是，此时，循环应该从后往前进行。因为如果是按从前往后的顺序，那么 <code>pack[i][j] = max(pack[i][j-c[i]] + w[i] , pack[i][j]);</code> 中进行比较的两个值 <code>pack[i][j]</code> 是没有更新的，也就是 <code>pack[i-1][j]</code> 的值，而 <code>pack[i][j - c[i]]</code>一定是前面被更新过的，也就是 <code>pack[i][j-w[i]]</code> 的值。这就是说，<code>max()</code> 比较的两个数是属于原来二维数组中不同的两行，而不是我们期望的相同的两行。</p>\n<p>如果上面的说法不能理解我们不妨这样：有一件物品的性价比很高，在pack数组的某个位置，我们第一次将这个物品放入背包中，但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会<strong><em>再次</em></strong>将这个物品添加进去。</p>\n<p><strong>优化后的代码</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> pack[<span class=\"number\">10000</span>],c[<span class=\"number\">1000</span>],w[<span class=\"number\">1000</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">make</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">memset</span>(pack,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(pack));</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = r; j &gt;= w[i]; j--)</div><div class=\"line\">            pack[j] = max(pack[j], pack[j - c[i]] + w[i]);</div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;pack[r]&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> n,t,V;</div><div class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</div><div class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</div><div class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;V;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">cin</span>&gt;&gt;c[i]&gt;&gt;w[i];</div><div class=\"line\">        make(n,V);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>初始化问题：</strong></p>\n<blockquote>\n<ul>\n<li><p>如果限定背包必须装满，那么需要将数组初始化为 -∞ （负无穷大）</p>\n</li>\n<li><p>如果背包可以不装满，那么数组初始化为0</p>\n</li>\n</ul>\n</blockquote>\n<p><em>为了后面的书写方便，我们把代码改成这样</em><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ZeroOnePack</span><span class=\"params\">(<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> w)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = V; i &gt;= c; i--)</div><div class=\"line\">\t\tpack[i] = max(pack[i], pack[i - c] + w);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><em>这样01背包问题的主要代码就是这样：</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</div><div class=\"line\">\tZeroOnePack(c[i],w[i]);</div></pre></td></tr></table></figure>\n<p>这样ZeroOnePack()这个函数就专门解决了<strong>“放一个物品”</strong>的问题</p>\n<h1 id=\"完全背包问题\"><a href=\"#完全背包问题\" class=\"headerlink\" title=\"完全背包问题\"></a>完全背包问题</h1><blockquote>\n<p>完全背包问题和0/1背包问题几乎一模一样，不同的就是物品不再是一个，而是无数个</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<p>完全背包不同处是原来的一个物品变成了无数个，但是我们还是可以把它变成0/1背包问题的，试想一下，即使拥有无数个物品，但是真的可以用无数个吗？</p>\n<p>不可能，因为背包的容量有限，所以每个物品c,w<strong>最多可以使用[V/c]个</strong>，所以以下面的数据为例：</p>\n<pre><code>c:    3    2    5    4\nw:    7    4    2    5\nV = 10\n</code></pre><p>我们完全可以把这组数据改成这样：</p>\n<pre><code>c:    3    3    3    2    2    2    2    2    5    5    4    4\nw:    7    7    7    4    4    4    4    4    2    2    5    5\n</code></pre><p>原因自然是背包容量最大为10,所以占用空间为3的物品最多放3个，修改过后的数据就可以用0/1背包的方法处理</p>\n<p>那难道完全背包需要重开一个c2[],w2[]，然后按0/1背包处理吗？</p>\n<p>当然不是，还记得我们将0/1背包进行优化时说的如果循环从前向后进行会发生什么后果吗？</p>\n<p>这一句 <strong>“但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会再次将这个物品添加进去。”</strong></p>\n<p>看到了？0/1背包时为了避免重复，我们将循环改为从后往前，但是完全背包是可以重复使用物品的，对吧？所以代码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CompletePack</span><span class=\"params\">(c,w)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = c; i &lt;= V; i++)</div><div class=\"line\">\t\tpack[i] = max(pack[i],pack[i - c] + w )</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>怎么样，和0/1背包只有一点点的差别对不对？</p>\n<h1 id=\"3-多重背包问题\"><a href=\"#3-多重背包问题\" class=\"headerlink\" title=\"3.多重背包问题\"></a>3.多重背包问题</h1><blockquote>\n<p>多重背包和0/1背包不同的地方就是物品不是一个而是有m个</p>\n</blockquote>\n<p>所以我们还是就一个物品c,w,m分析：</p>\n<p>对于m可能有两种情况：</p>\n<ol>\n<li><code>m &gt;= [V/c]</code>，这种情况明显是完全背包</li>\n<li><code>0 &lt; m &lt; [v/c]</code>，对于这种情况需要认真分析一下</li>\n</ol>\n<p>我们仍然需要按照0/1背包的思路把这些物品拆开，而且我们要保证我们拆出来的这些物品可以通过组合表示出1到m任意件物。</p>\n<p>我们可以考虑二进制的计数方法，这样我们把物品拆成<code>(c,w) , (2c,2w) , (4c,4w) …… [(m-2^k)*c , (m-2^k)*w)]</code></p>\n<p>不管最优解会在这件物品中取几件，我们都可以用我们拆出来的这些物品来表示（请自己证明，二进制的思想）</p>\n<p>所以，有了思路，代码就简单了：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MultiplePack</span><span class=\"params\">(c,w,m)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (c * m &gt;= V) &#123;</div><div class=\"line\">\t\tCompletePack(c,w);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tk = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span> (k &lt; m) &#123;</div><div class=\"line\">\t\tZeroOnePack(c*k,w*k);</div><div class=\"line\">\t\tm = m - k;</div><div class=\"line\">\t\tk = <span class=\"number\">2</span> * k;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tZeroOnePack(c * m, w * m);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong><em>其实就是0/1背包和完全背包的组合，有木有？</em></strong></p>\n<p>未完待续……</p>\n","excerpt":"","more":"<h1 id=\"0-1背包问题\"><a href=\"#0-1背包问题\" class=\"headerlink\" title=\"0/1背包问题\"></a>0/1背包问题</h1><blockquote>\n<p>有N件物品和一个容量为V的背包。放入第i件物品耗费的空间是Ci，得到的价值是Wi。求解将哪些物品装入背包可使价值总和最大？</p>\n</blockquote>\n<p>  将每一件物品从1到n编号，从第1件物品开始，每一件物品就只有两个状态：放进背包了 / 没有放进背包。</p>\n<p>  我们画一张表格，行对应着每一件物品，列对应着背包的重量，那么pack[i][j]就表示  <strong>前i件物品，背包最大承重j</strong> 这个子问题的解。</p>\n<p> 给一组数据作为样例：</p>\n<pre><code>5 10\n6 2\n3 2\n5 6\n4 5\n6 4\n</code></pre><p>  第一行表示有5件物品，10为最大承重，2-6行为5个物品的价值和重量。</p>\n<p><strong>生成以下的表格</strong></p>\n<pre><code>0    6    6    6    6     6     6     6     6     6\n0    6    6    9    9     9     9     9     9     9\n0    6    6    9    9     9     9    11    11    14\n0    6    6    9    9     9    10    11    13    14\n0    6    6    9    9    12    12    15    15    15\n</code></pre><p>　所以最终的结果是最后一行最后一列的 <strong>15</strong></p>\n<p><strong>给出代码：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 01 package problem */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> pack[<span class=\"number\">100</span>][<span class=\"number\">1000</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> c[<span class=\"number\">100</span>],w[<span class=\"number\">100</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">make</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(pack,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(pack));</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = w[i]; j &lt;= r; j++)</div><div class=\"line\">            pack[i][j] = max(pack[i - <span class=\"number\">1</span>][j - c[i]] + w[i], pack[i - <span class=\"number\">1</span>][j]);</div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;pack[n][r];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> t,n,V;</div><div class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</div><div class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123; <span class=\"comment\">//多组数据</span></div><div class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;V;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</div><div class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;c[i]&gt;&gt;w[i];</div><div class=\"line\">        make(n,V);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>代码优化</strong></p>\n<p>这个代码在时间上应该已经不能再优化了，但是还可以考虑空间复杂度的优化。</p>\n<p><strong>优化的基本思路：</strong></p>\n<p>考虑所用到的状态转移方程: <code>pack[i][j] = max(pack[i-1][j-c[i]] + w[i], pack[i-1][j]);</code> 可以发现 <code>pack[i][j]</code> 的值并不和整个二维表的每一个数字的值都有关，而是仅仅和上面一行的值有关，所以可以使用 <code>pack[2][n]</code> 这么大的数组来存储结果。</p>\n<p>考虑状态转移方程的实际情况，还可以使用<strong>一维数组</strong>来进行运算，但是要注意的是，此时，循环应该从后往前进行。因为如果是按从前往后的顺序，那么 <code>pack[i][j] = max(pack[i][j-c[i]] + w[i] , pack[i][j]);</code> 中进行比较的两个值 <code>pack[i][j]</code> 是没有更新的，也就是 <code>pack[i-1][j]</code> 的值，而 <code>pack[i][j - c[i]]</code>一定是前面被更新过的，也就是 <code>pack[i][j-w[i]]</code> 的值。这就是说，<code>max()</code> 比较的两个数是属于原来二维数组中不同的两行，而不是我们期望的相同的两行。</p>\n<p>如果上面的说法不能理解我们不妨这样：有一件物品的性价比很高，在pack数组的某个位置，我们第一次将这个物品放入背包中，但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会<strong><em>再次</em></strong>将这个物品添加进去。</p>\n<p><strong>优化后的代码</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> pack[<span class=\"number\">10000</span>],c[<span class=\"number\">1000</span>],w[<span class=\"number\">1000</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">make</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">memset</span>(pack,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(pack));</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = r; j &gt;= w[i]; j--)</div><div class=\"line\">            pack[j] = max(pack[j], pack[j - c[i]] + w[i]);</div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;pack[r]&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> n,t,V;</div><div class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</div><div class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</div><div class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;V;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">cin</span>&gt;&gt;c[i]&gt;&gt;w[i];</div><div class=\"line\">        make(n,V);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>初始化问题：</strong></p>\n<blockquote>\n<ul>\n<li><p>如果限定背包必须装满，那么需要将数组初始化为 -∞ （负无穷大）</p>\n</li>\n<li><p>如果背包可以不装满，那么数组初始化为0</p>\n</li>\n</ul>\n</blockquote>\n<p><em>为了后面的书写方便，我们把代码改成这样</em><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ZeroOnePack</span><span class=\"params\">(<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> w)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = V; i &gt;= c; i--)</div><div class=\"line\">\t\tpack[i] = max(pack[i], pack[i - c] + w);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><em>这样01背包问题的主要代码就是这样：</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</div><div class=\"line\">\tZeroOnePack(c[i],w[i]);</div></pre></td></tr></table></figure>\n<p>这样ZeroOnePack()这个函数就专门解决了<strong>“放一个物品”</strong>的问题</p>\n<h1 id=\"完全背包问题\"><a href=\"#完全背包问题\" class=\"headerlink\" title=\"完全背包问题\"></a>完全背包问题</h1><blockquote>\n<p>完全背包问题和0/1背包问题几乎一模一样，不同的就是物品不再是一个，而是无数个</p>\n</blockquote>\n<p><strong>思路</strong></p>\n<p>完全背包不同处是原来的一个物品变成了无数个，但是我们还是可以把它变成0/1背包问题的，试想一下，即使拥有无数个物品，但是真的可以用无数个吗？</p>\n<p>不可能，因为背包的容量有限，所以每个物品c,w<strong>最多可以使用[V/c]个</strong>，所以以下面的数据为例：</p>\n<pre><code>c:    3    2    5    4\nw:    7    4    2    5\nV = 10\n</code></pre><p>我们完全可以把这组数据改成这样：</p>\n<pre><code>c:    3    3    3    2    2    2    2    2    5    5    4    4\nw:    7    7    7    4    4    4    4    4    2    2    5    5\n</code></pre><p>原因自然是背包容量最大为10,所以占用空间为3的物品最多放3个，修改过后的数据就可以用0/1背包的方法处理</p>\n<p>那难道完全背包需要重开一个c2[],w2[]，然后按0/1背包处理吗？</p>\n<p>当然不是，还记得我们将0/1背包进行优化时说的如果循环从前向后进行会发生什么后果吗？</p>\n<p>这一句 <strong>“但是按照从前往后的顺序，很可能在这个位置的后面某个位置我们会再次将这个物品添加进去。”</strong></p>\n<p>看到了？0/1背包时为了避免重复，我们将循环改为从后往前，但是完全背包是可以重复使用物品的，对吧？所以代码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CompletePack</span><span class=\"params\">(c,w)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = c; i &lt;= V; i++)</div><div class=\"line\">\t\tpack[i] = max(pack[i],pack[i - c] + w )</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>怎么样，和0/1背包只有一点点的差别对不对？</p>\n<h1 id=\"3-多重背包问题\"><a href=\"#3-多重背包问题\" class=\"headerlink\" title=\"3.多重背包问题\"></a>3.多重背包问题</h1><blockquote>\n<p>多重背包和0/1背包不同的地方就是物品不是一个而是有m个</p>\n</blockquote>\n<p>所以我们还是就一个物品c,w,m分析：</p>\n<p>对于m可能有两种情况：</p>\n<ol>\n<li><code>m &gt;= [V/c]</code>，这种情况明显是完全背包</li>\n<li><code>0 &lt; m &lt; [v/c]</code>，对于这种情况需要认真分析一下</li>\n</ol>\n<p>我们仍然需要按照0/1背包的思路把这些物品拆开，而且我们要保证我们拆出来的这些物品可以通过组合表示出1到m任意件物。</p>\n<p>我们可以考虑二进制的计数方法，这样我们把物品拆成<code>(c,w) , (2c,2w) , (4c,4w) …… [(m-2^k)*c , (m-2^k)*w)]</code></p>\n<p>不管最优解会在这件物品中取几件，我们都可以用我们拆出来的这些物品来表示（请自己证明，二进制的思想）</p>\n<p>所以，有了思路，代码就简单了：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MultiplePack</span><span class=\"params\">(c,w,m)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (c * m &gt;= V) &#123;</div><div class=\"line\">\t\tCompletePack(c,w);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tk = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span> (k &lt; m) &#123;</div><div class=\"line\">\t\tZeroOnePack(c*k,w*k);</div><div class=\"line\">\t\tm = m - k;</div><div class=\"line\">\t\tk = <span class=\"number\">2</span> * k;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tZeroOnePack(c * m, w * m);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong><em>其实就是0/1背包和完全背包的组合，有木有？</em></strong></p>\n<p>未完待续……</p>\n"},{"title":" 重写博客","date":"2016-01-22T05:58:07.000Z","_content":"\n一件很不幸的事，我重装系统的时候好像忘了把hexo的文章备份下来，结果那些markdown文档就都呵呵了 TAT～\n\n重新配置了一次hexo真的好麻烦，搞了半天，我真不知道我当时是怎么弄好的！\n\n之前的那些文章我还没有md文档，不过我倒是把整个博客给clone下来保存好了，以后如果有时间还是会恢复的吧。\n\n这么快就放假了，然而真心觉得2015有点对不起自己，对不起这一年的时间。不过怎么说呢，后悔是没有用的，毕竟人要往前看嘛。只是希望2016结束的时候我不要还是这样，还是说出同样的话。\n\n** 再不努力就老了！**","source":"_posts/重写博客.md","raw":"title: ' 重写博客'\ndate: 2016-01-22 13:58:07\ncategories: \"杂项\"\ntags:\n---\n\n一件很不幸的事，我重装系统的时候好像忘了把hexo的文章备份下来，结果那些markdown文档就都呵呵了 TAT～\n\n重新配置了一次hexo真的好麻烦，搞了半天，我真不知道我当时是怎么弄好的！\n\n之前的那些文章我还没有md文档，不过我倒是把整个博客给clone下来保存好了，以后如果有时间还是会恢复的吧。\n\n这么快就放假了，然而真心觉得2015有点对不起自己，对不起这一年的时间。不过怎么说呢，后悔是没有用的，毕竟人要往前看嘛。只是希望2016结束的时候我不要还是这样，还是说出同样的话。\n\n** 再不努力就老了！**","slug":"重写博客","published":1,"updated":"2018-01-17T08:11:42.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjcishbvf000tnuyecm1lt46g","content":"<p>一件很不幸的事，我重装系统的时候好像忘了把hexo的文章备份下来，结果那些markdown文档就都呵呵了 TAT～</p>\n<p>重新配置了一次hexo真的好麻烦，搞了半天，我真不知道我当时是怎么弄好的！</p>\n<p>之前的那些文章我还没有md文档，不过我倒是把整个博客给clone下来保存好了，以后如果有时间还是会恢复的吧。</p>\n<p>这么快就放假了，然而真心觉得2015有点对不起自己，对不起这一年的时间。不过怎么说呢，后悔是没有用的，毕竟人要往前看嘛。只是希望2016结束的时候我不要还是这样，还是说出同样的话。</p>\n<p><strong> 再不努力就老了！</strong></p>\n","excerpt":"","more":"<p>一件很不幸的事，我重装系统的时候好像忘了把hexo的文章备份下来，结果那些markdown文档就都呵呵了 TAT～</p>\n<p>重新配置了一次hexo真的好麻烦，搞了半天，我真不知道我当时是怎么弄好的！</p>\n<p>之前的那些文章我还没有md文档，不过我倒是把整个博客给clone下来保存好了，以后如果有时间还是会恢复的吧。</p>\n<p>这么快就放假了，然而真心觉得2015有点对不起自己，对不起这一年的时间。不过怎么说呢，后悔是没有用的，毕竟人要往前看嘛。只是希望2016结束的时候我不要还是这样，还是说出同样的话。</p>\n<p><strong> 再不努力就老了！</strong></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjcishbu30000nuyeqg7m4f05","category_id":"cjcishbuc0002nuyegg6vb345","_id":"cjcishbuq0009nuyexmlv9q70"},{"post_id":"cjcishbua0001nuyeoyqxapat","category_id":"cjcishbuc0002nuyegg6vb345","_id":"cjcishbur000cnuye8wp57hsj"},{"post_id":"cjcishbuh0004nuye658kp7dy","category_id":"cjcishbuq000anuyebmg1fkxd","_id":"cjcishbut000gnuye9tmykjr0"},{"post_id":"cjcishbuk0005nuyeyt3yol5k","category_id":"cjcishbus000dnuye4346r2gi","_id":"cjcishbuu000jnuyegbq3nv9j"},{"post_id":"cjcishbv9000onuyeqgzbddhq","category_id":"cjcishbuq000anuyebmg1fkxd","_id":"cjcishbvh000unuyeldjgmcqd"},{"post_id":"cjcishbvf000tnuyecm1lt46g","category_id":"cjcishbuq000anuyebmg1fkxd","_id":"cjcishbvk000xnuyeti4vmcly"},{"post_id":"cjcishbv1000mnuye4wm1wou6","category_id":"cjcishbvb000qnuyeq7p04u5v","_id":"cjcishbvn000znuyel6pain0p"},{"post_id":"cjcishbvd000snuyezbnsza9n","category_id":"cjcishbvi000vnuyeyvix6l8l","_id":"cjcishbvo0011nuyecm1k7qpk"}],"PostTag":[{"post_id":"cjcishbu30000nuyeqg7m4f05","tag_id":"cjcishbug0003nuyez2zffuu1","_id":"cjcishbup0008nuyeaui9apdr"},{"post_id":"cjcishbua0001nuyeoyqxapat","tag_id":"cjcishbuo0007nuyei7zijr73","_id":"cjcishbus000fnuyettqwt7jq"},{"post_id":"cjcishbua0001nuyeoyqxapat","tag_id":"cjcishbug0003nuyez2zffuu1","_id":"cjcishbut000hnuyegoryszkq"},{"post_id":"cjcishbuk0005nuyeyt3yol5k","tag_id":"cjcishbus000enuyei5ua18w6","_id":"cjcishbuv000knuyeag4t967r"},{"post_id":"cjcishbuk0005nuyeyt3yol5k","tag_id":"cjcishbut000inuyek17yv53o","_id":"cjcishbuv000lnuyeqty8ak1j"},{"post_id":"cjcishbv1000mnuye4wm1wou6","tag_id":"cjcishbvc000rnuyethk60kdk","_id":"cjcishbvn0010nuyezpz99u4y"},{"post_id":"cjcishbv1000mnuye4wm1wou6","tag_id":"cjcishbvi000wnuye12ni5a18","_id":"cjcishbvo0012nuyexretfdxb"},{"post_id":"cjcishbvd000snuyezbnsza9n","tag_id":"cjcishbvm000ynuyetn6az3d5","_id":"cjcishbvp0014nuyehzpxqjd7"},{"post_id":"cjcishbvd000snuyezbnsza9n","tag_id":"cjcishbvp0013nuyech64dsu2","_id":"cjcishbvs0015nuyegub8ozbe"},{"post_id":"cjcishbvd000snuyezbnsza9n","tag_id":"cjcishbug0003nuyez2zffuu1","_id":"cjcishbvs0016nuye4bu0njne"}],"Tag":[{"name":"C/C++","_id":"cjcishbug0003nuyez2zffuu1"},{"name":"Linux","_id":"cjcishbuo0007nuyei7zijr73"},{"name":"Markdown","_id":"cjcishbus000enuyei5ua18w6"},{"name":"MathJax","_id":"cjcishbut000inuyek17yv53o"},{"name":"机器学习","_id":"cjcishbvc000rnuyethk60kdk"},{"name":"Python","_id":"cjcishbvi000wnuye12ni5a18"},{"name":"背包问题","_id":"cjcishbvm000ynuyetn6az3d5"},{"name":"算法","_id":"cjcishbvp0013nuyech64dsu2"}]}}